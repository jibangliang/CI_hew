<?xml version='1.0' encoding='utf-8'?>
<ResultsSession buildId="Default Project-2021-05-31" date="05/31/21 16:34:41" machine="PC-3926" project="Default Project" tag="MISRA C 2012" time="2021-05-31T16:34:41+09:00" toolName="C++test" toolVer="10.4.3.20191114B689" user="bji">
   <TestConfig machine="PC-3926" name="MISRA C 2012" pseudoUrl="c++test.builtin://MISRA C 2012" user="bji" />
   <Authors>
      <Author id="dev1" name="bji" />
   </Authors>
   <VersionInfos>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="IExecutionViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="InsureViolation" ver="3" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.codereview" resultId="ICodeReviewUndefinedAuthorsInfo" ver="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.codereview" resultId="ICodeReviewScannerInfo" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.scope" resultId="IScopeProjectInfo" ver="3" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricEstimationInfo" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationInfo" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationProjectInfo" ver="2" />
   </VersionInfos>
   
   
   <Scope>
      <ProjectInformations>
         <ScopeProjectInfo fltFiles="13" fltLns="4141" project="/UnitTest" totFiles="13" totLns="4141" />
      </ProjectInformations>
   </Scope>
   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:34">
      <Goal mode="1" name="静的" />
      <Projects>
         <Project bdCheckedFiles="1" bdTotalFiles="1" checkedFiles="10" checkedLns="609" name="UnitTest" qfixErrs="0" suppErrs="0" totErrs="225" totFiles="10" totLns="609" />
      </Projects>
      <Rules>
         <RulesList>
            <Rule cat="MISRAC2012-DIR_4_1" desc="配列の境界を超えてアクセスしてはならない" id="MISRAC2012-DIR_4_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="null ポインターの間接参照を避ける" id="MISRAC2012-DIR_4_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="ゼロによる除算を避ける" id="MISRAC2012-DIR_4_1-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="不正な書式指定子によるバッファー オーバーフローを避ける" id="MISRAC2012-DIR_4_1-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="ゼロで終わっていない文字列の読み込みによるオーバーフローを避ける" id="MISRAC2012-DIR_4_1-e" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="間接参照の後に null チェックしない" id="MISRAC2012-DIR_4_1-f" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="バッファー読み込み時のオーバーフローを避ける" id="MISRAC2012-DIR_4_1-g" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="バッファー書き込み時のオーバーフローを避ける" id="MISRAC2012-DIR_4_1-h" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="ポインタ算術は配列または配列要素を指すポインタにのみ適用する" id="MISRAC2012-DIR_4_1-i" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_1" desc="同じ配列を指している場合を除き、ポインター型に >、>=、&lt;、&lt;= を適用してはならない" id="MISRAC2012-DIR_4_1-j" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_10" desc="多重インクルード ガードを使用する" id="MISRAC2012-DIR_4_10-a" sev="2">
               <Stats authTot="4;" authUrg="1;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_11" desc="ライブラリ関数に渡される値を検証する" id="MISRAC2012-DIR_4_11-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_12" desc="動的なヒープ メモリの割り当ては、用いてはならない" id="MISRAC2012-DIR_4_12-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_13" desc="リソースが解放されていることを確認する" id="MISRAC2012-DIR_4_13-a" sev="4">
               <Stats authTot="3;" authUrg="0;" total="3" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_13" desc="解放されたリソースを使用してはならない" id="MISRAC2012-DIR_4_13-b" sev="4">
               <Stats authTot="2;" authUrg="0;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_13" desc="無効なポインタを使用してリソースを解放してはならない" id="MISRAC2012-DIR_4_13-c" sev="4">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_13" desc="解放されていないロックを放棄してはならない" id="MISRAC2012-DIR_4_13-d" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_13" desc="二重ロックを避ける" id="MISRAC2012-DIR_4_13-e" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="汚染されたデータを配列添え字として使用しない" id="MISRAC2012-DIR_4_14-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="汚染されたデータによる整数オーバーフロー/アンダーフローを防ぐ" id="MISRAC2012-DIR_4_14-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="汚染されたデータによるバッファー読み込み時のオーバーフローを避ける" id="MISRAC2012-DIR_4_14-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="汚染されたデータによるバッファー書き込み時のオーバーフローを避ける" id="MISRAC2012-DIR_4_14-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="コマンド インジェクションから防御する" id="MISRAC2012-DIR_4_14-e" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="ファイル名インジェクションから防御する" id="MISRAC2012-DIR_4_14-f" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="SQL インジェクションから防御する" id="MISRAC2012-DIR_4_14-g" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="汚染されたデータによるバッファー オーバーフローを避ける" id="MISRAC2012-DIR_4_14-h" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="不正な書式制限の定義によるバッファー オーバーフローを避ける" id="MISRAC2012-DIR_4_14-i" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="環境変数インジェクションから防御する" id="MISRAC2012-DIR_4_14-j" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="汚染されたデータを出力コンソールに出力してはならない" id="MISRAC2012-DIR_4_14-k" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_14" desc="書式文字列からサニタイズされていないユーザー入力を除外する" id="MISRAC2012-DIR_4_14-l" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_2" desc="アセンブラの使用をすべて文書化する" id="MISRAC2012-DIR_4_2-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_3" desc="アセンブリ言語は、カプセル化して分離しなければならない" id="MISRAC2012-DIR_4_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_4" desc="コード セクションを &quot;コメント アウト&quot; してはならない" id="MISRAC2012-DIR_4_4-a" sev="4">
               <Stats authTot="12;" authUrg="0;" total="12" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_5" desc="同じ名前空間にあり可視性が重なる識別子は見た目で明確に区別できなければならない" id="MISRAC2012-DIR_4_5-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_6" desc="基本型を指す typedef の名前は数字を含むべきである" id="MISRAC2012-DIR_4_6-a" sev="4">
               <Stats authTot="10;" authUrg="0;" total="10" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_6" desc="基本型の代わりに typedef を使用するべきである" id="MISRAC2012-DIR_4_6-b" sev="4">
               <Stats authTot="9;" authUrg="0;" total="9" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_6" desc="C99 規格のコードでは、独自の typedef を宣言する代わりに stdint.h の typedef を使用する" id="MISRAC2012-DIR_4_6-c" sev="4">
               <Stats authTot="10;" authUrg="0;" total="10" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_7" desc="非 void 関数の戻り値をチェックする" id="MISRAC2012-DIR_4_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_7" desc="常に非 void 関数の戻り値をチェックする" id="MISRAC2012-DIR_4_7-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_8" desc="構造体または共用体を指すポインターが翻訳単位内で 1 回も間接参照されない場合、オブジェクトの実装を隠すべきである" id="MISRAC2012-DIR_4_8-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-DIR_4_9" desc="関数形式マクロよりも関数を用いるべきである" id="MISRAC2012-DIR_4_9-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_1" desc="オペランドがブール値として解釈される場合、常に実質的なブール型の式を使用するべきである" id="MISRAC2012-RULE_10_1-a" sev="2">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_1" desc="オペランドが数値として解釈される場合、実質的なブール型のオペランドを使用するべきではない" id="MISRAC2012-RULE_10_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_1" desc="オペランドが数値として解釈される場合、実質的な文字型のオペランドを使用するべきではない" id="MISRAC2012-RULE_10_1-c" sev="2">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_1" desc="算術演算では実質的な列挙型のオペランドを使用するべきではない" id="MISRAC2012-RULE_10_1-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_1" desc="実質的な signed 型または列挙型のオペランドに対してシフトおよびビット演算を行うべきではない" id="MISRAC2012-RULE_10_1-e" sev="2">
               <Stats authTot="20;" authUrg="3;" total="20" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_1" desc="ビット シフト演算の右辺のオペランドとして実質的な signed 型または列挙型のオペランドを使用するべきではない" id="MISRAC2012-RULE_10_1-f" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_1" desc="単項マイナス演算子のオペランドとして実質的な unsigned 型のオペランドを使用するべきではない" id="MISRAC2012-RULE_10_1-g" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_2" desc="実質的な文字型の式を加算または減算演算で不適切に使用するべきではない" id="MISRAC2012-RULE_10_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_3" desc="式の値をより小さい実質的な型を持つオブジェクトに代入してはならない" id="MISRAC2012-RULE_10_3-a" sev="2">
               <Stats authTot="3;" authUrg="1;" total="3" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_3" desc="式の値を実質的な型カテゴリが異なるオブジェクトに代入してはならない" id="MISRAC2012-RULE_10_3-b" sev="2">
               <Stats authTot="8;" authUrg="5;" total="8" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_4" desc="通常の算術変換が行われる演算子の 2 つのオペランドは、同じ実質的な型カテゴリでなければならない" id="MISRAC2012-RULE_10_4-a" sev="2">
               <Stats authTot="4;" authUrg="1;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_4" desc="3 項演算子の 2 番目および 3 番目のオペランドは同じ実質的な型カテゴリでなければならない" id="MISRAC2012-RULE_10_4-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_5" desc="実質的な列挙型へのキャスト演算は許されない" id="MISRAC2012-RULE_10_5-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_5" desc="実質的なブール型から、また実質的なブール型にキャストしてはならない" id="MISRAC2012-RULE_10_5-b" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_5" desc="実質的な文字型と実質的な浮動小数点型の間でキャストしてはならない" id="MISRAC2012-RULE_10_5-c" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_6" desc="複合式の値をより大きい実質的な型を持つオブジェクトに代入してはならない" id="MISRAC2012-RULE_10_6-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_7" desc="通常の数値変換が行われる演算子のオペランドの 1 つとして複合式が使用される場合、他方のオペランドはより大きい実質的な型を持つ型であってはならない" id="MISRAC2012-RULE_10_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_7" desc="条件演算子の (2 つ目または 3 つ目の) オペランドとして複合式が使用される場合、他のオペランドはより大きい実質的な型を持つ型であってはならない" id="MISRAC2012-RULE_10_7-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_10_8" desc="複合式の値を別の実質的な型カテゴリまたはより大きい実質的な型にキャストしてはならない" id="MISRAC2012-RULE_10_8-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_1" desc="関数へのポインターとそれ以外の型との間で変換を行ってはならない" id="MISRAC2012-RULE_11_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_1" desc="互換性のない関数型へのポインターの間で変換を行ってはならない" id="MISRAC2012-RULE_11_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_2" desc="不完全型へのポインターと他の型との間で変換を行ってはならない" id="MISRAC2012-RULE_11_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_3" desc="オブジェクト型へのポインターと別のオブジェクト型へのポインターとの間で変換を行ってはならない" id="MISRAC2012-RULE_11_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_4" desc="オブジェクトへのポインターと整数型との間で変換を行ってはならない" id="MISRAC2012-RULE_11_4-a" sev="4">
               <Stats authTot="2;" authUrg="0;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_5" desc="void へのポインターをオブジェクトへのポインターに変換してはならない" id="MISRAC2012-RULE_11_5-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_6" desc="void へのポインターと数値型との間でキャストしてはならない" id="MISRAC2012-RULE_11_6-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_7" desc="オブジェクトへのポインターと非整数数値型との間でキャストしてはならない" id="MISRAC2012-RULE_11_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_8" desc="キャストによってポインターまたは参照型から const または volatile 修飾子を取り除いてはならない" id="MISRAC2012-RULE_11_8-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_9" desc="リテラルのゼロ (0) を null ポインター定数として使用してはならない" id="MISRAC2012-RULE_11_9-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_11_9" desc="null ポインター定数としてリテラルのゼロ (0) ではなく NULL を使用する" id="MISRAC2012-RULE_11_9-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_12_1" desc="式中のすべての演算子の種類が同じでない限り、括弧を使用する" id="MISRAC2012-RULE_12_1-a" sev="4">
               <Stats authTot="3;" authUrg="0;" total="3" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_12_1" desc="論理演算子 &amp;&amp; または|| のオペランドは一次式でなければならない" id="MISRAC2012-RULE_12_1-b" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_12_1" desc="sizeof 文では、() を使わなければならない" id="MISRAC2012-RULE_12_1-c" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_12_2" desc="シフト演算子の右側のオペランドの値は、0 以上かつ左辺のオペランドの潜在型のビット幅未満でなければならない" id="MISRAC2012-RULE_12_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_12_3" desc="カンマ演算子は、用いてはならない" id="MISRAC2012-RULE_12_3-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_12_4" desc="'+', '-', '*' 演算子の定数式における整数オーバーフローまたはアンダーフロー" id="MISRAC2012-RULE_12_4-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_12_4" desc="'&lt;&lt;' 演算子の定数式における整数オーバーフローまたはアンダーフロー" id="MISRAC2012-RULE_12_4-b" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_12_5" desc="sizeof 演算子のオペランドは「配列型」として宣言された関数のパラメーターであってはならない" id="MISRAC2012-RULE_12_5-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_1" desc="初期化リストに永続的な副作用が含まれていてはならない" id="MISRAC2012-RULE_13_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_2" desc="式の値は、規格が認めるどのような順序で評価されようとも、同じでなければならない" id="MISRAC2012-RULE_13_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_2" desc="関数の引数の評価順序に依存するコードを書いてはならない" id="MISRAC2012-RULE_13_2-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_2" desc="関数呼び出しおよび関数引数の評価順序に依存するコードを記述してはならない" id="MISRAC2012-RULE_13_2-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_2" desc="関数呼び出しを含む式の評価順序に依存するコードを書いてはならない" id="MISRAC2012-RULE_13_2-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_2" desc="オブジェクトは、シーケンス ポイントの間で、格納された値が式の評価によって 2 回以上変更されてはならない" id="MISRAC2012-RULE_13_2-e" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_2" desc="2 つの隣接するシーケンス ポイント間で複数の volatile を使用してはならない" id="MISRAC2012-RULE_13_2-f" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_2" desc="関数呼び出しの評価順序に依存するコードを書いてはならない" id="MISRAC2012-RULE_13_2-g" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_3" desc="インクリメント (++) またはデクリメント (--) 演算子がある完全な式は、他の副作用の可能性があってはならない" id="MISRAC2012-RULE_13_3-a" sev="4">
               <Stats authTot="1;" authUrg="0;" total="1" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_4" desc="組み込みの代入演算子の結果を使用するべきではない" id="MISRAC2012-RULE_13_4-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_5" desc="論理演算子 &amp;&amp; または || の右側のオペランドには、副作用があってはならない" id="MISRAC2012-RULE_13_5-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_6" desc="sizeof 演算子のオペランドに副作用を持つ式が含まれていてはならない" id="MISRAC2012-RULE_13_6-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_6" desc="sizeof 演算子のオペランドで volatile 左辺値として指定されたオブジェクトにアクセスするべきではない" id="MISRAC2012-RULE_13_6-b" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_13_6" desc="関数の呼び出しを sizeof 演算子のオペランドとして使用してはならない" id="MISRAC2012-RULE_13_6-c" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_1" desc="for ループのカウンターは、実質的な浮動小数点型であってはならない" id="MISRAC2012-RULE_14_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_1" desc="while および do-while ループのカウンターは、実質的な浮動小数点型であってはならない" id="MISRAC2012-RULE_14_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_2" desc="for ループにはループ カウンターが 1 つだけあること、またループ カウンターが for ループ本文で変更されてはならない" id="MISRAC2012-RULE_14_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_2" desc="for ループの最初の句は整形式でなければならない" id="MISRAC2012-RULE_14_2-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_2" desc="for ループの 2 番目の句は整形式でなければならない" id="MISRAC2012-RULE_14_2-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_2" desc="for ループの 3 番目の句は整形式でなければならない" id="MISRAC2012-RULE_14_2-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-aa" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-ab" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="常に同じ値に評価される条件式を避ける" id="MISRAC2012-RULE_14_3-ac" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="switch 文には到達できないブランチがあってはならない" id="MISRAC2012-RULE_14_3-ad" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-e" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-f" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-g" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-h" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-i" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-j" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-k" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-l" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-m" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-n" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-o" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-p" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-q" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-r" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-s" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-t" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-u" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-v" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-w" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-x" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-y" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_3" desc="結果が不変になるブール演算は許されない" id="MISRAC2012-RULE_14_3-z" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_14_4" desc="オペランドが実質的にブール型である場合を除き、 0 との比較テストは明示的に行うべきである" id="MISRAC2012-RULE_14_4-a" sev="2">
               <Stats authTot="1;" authUrg="0;" total="1" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_15_1" desc="goto 文を用いてはならない" id="MISRAC2012-RULE_15_1-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_15_2" desc="goto 文は同じ関数ボディ内の後の部分に宣言されたラベルにジャンプしなければならない" id="MISRAC2012-RULE_15_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_15_3" desc="goto 文によって参照されるラベルは、同じブロックまたは goto 文を含む外側のブロックで宣言されなければならない" id="MISRAC2012-RULE_15_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_15_4" desc="反復文では、ループを終了するために複数の break 文または goto 文を使用してはならない" id="MISRAC2012-RULE_15_4-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_15_5" desc="関数では、関数の最後に唯一の出口がなければならない" id="MISRAC2012-RULE_15_5-a" sev="4">
               <Stats authTot="13;" authUrg="0;" total="13" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_15_6" desc="switch、while、do...while 、for 文の本体を構成する文は、複合文でなければならない" id="MISRAC2012-RULE_15_6-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_15_6" desc="if および else の後には複合文を続けなければならない" id="MISRAC2012-RULE_15_6-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_15_7" desc="すべてのif...else if 構文は、else 節で終了しなければならない" id="MISRAC2012-RULE_15_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_1" desc="switch 文には switch ラベルと switch 節のみ使用し、他のコードを入れるべきではない" id="MISRAC2012-RULE_16_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_1" desc="switch ラベルは、それを直接内包している複合文が switch 文の本文である場合にだけ用いなければならない" id="MISRAC2012-RULE_16_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_1" desc="空でない case 節は、無条件 break 文で終了しなければならない" id="MISRAC2012-RULE_16_1-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_1" desc="空でない default 節は、無条件 break 文で終了しなければならない" id="MISRAC2012-RULE_16_1-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_1" desc="必ず switch 文にデフォルト ブランチを用意する" id="MISRAC2012-RULE_16_1-e" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_1" desc="default ラベルの終了の break の前に 文またはコメントがなければならない" id="MISRAC2012-RULE_16_1-f" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_1" desc="'default' ラベルがある場合、 'default' ラベルは switch 文の最初または最後の switch ラベルとして出現しなければならない" id="MISRAC2012-RULE_16_1-g" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_1" desc="switch 文には少なくとも 2 個の switch 句がなければならない" id="MISRAC2012-RULE_16_1-h" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_2" desc="switch ラベルは、それを直接内包している複合文が switch 文の本文である場合にだけ用いなければならない" id="MISRAC2012-RULE_16_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_3" desc="空でない case 節は、無条件 break 文で終了しなければならない" id="MISRAC2012-RULE_16_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_3" desc="空でない default 節は、無条件 break 文で終了しなければならない" id="MISRAC2012-RULE_16_3-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_4" desc="必ず switch 文にデフォルト ブランチを用意する" id="MISRAC2012-RULE_16_4-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_4" desc="default ラベルの終了の break の前に 文またはコメントがなければならない" id="MISRAC2012-RULE_16_4-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_5" desc="'default' ラベルがある場合、 'default' ラベルは switch 文の最初または最後の switch ラベルとして出現しなければならない" id="MISRAC2012-RULE_16_5-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_6" desc="switch 文には少なくとも 2 個の switch 句がなければならない" id="MISRAC2012-RULE_16_6-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_7" desc="switch 式では、実質的なブール型になる値を用いてはならない" id="MISRAC2012-RULE_16_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_16_7" desc="switch 文では、実質的なブール型になる値を用いてはならない" id="MISRAC2012-RULE_16_7-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_1" desc="識別子 va_list、va_arg、va_start、va_end、va_copy を使用するべきではない" id="MISRAC2012-RULE_17_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_1" desc="識別子 va_list、va_arg、va_start、va_end を使用するべきではない" id="MISRAC2012-RULE_17_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_2" desc="関数は、直接的か間接的かにかかわらず、その関数自身を呼び出してはならない" id="MISRAC2012-RULE_17_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_3" desc="関数は、関数呼び出しから見えるプロトタイプを持たなければならない" id="MISRAC2012-RULE_17_3-a" sev="1">
               <Stats authTot="1;" authUrg="1;" total="1" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_4" desc="戻り値の型が非 void の関数の場合、すべての出口で、式を持つ明示的な return 文を記述しなければならない" id="MISRAC2012-RULE_17_4-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_5" desc="配列型として宣言されたパラメーターに対応する関数引数には、適切な数の要素がなければならない" id="MISRAC2012-RULE_17_5-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_6" desc="配列パラメーターの宣言の [ ] の中に static キーワードが含まれていてはならない" id="MISRAC2012-RULE_17_6-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_7" desc="戻り型が void ではない関数によって返却される値を使用しなければならない" id="MISRAC2012-RULE_17_7-a" sev="2">
               <Stats authTot="2;" authUrg="2;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_7" desc="戻り型が void ではない関数によって返却される値を使用しなければならない" id="MISRAC2012-RULE_17_7-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_17_8" desc="関数のパラメーターを変更するべきではない" id="MISRAC2012-RULE_17_8-a" sev="4">
               <Stats authTot="2;" authUrg="0;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_1" desc="配列の境界を超えてアクセスしてはならない" id="MISRAC2012-RULE_18_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_1" desc="範囲外の配列およびポインターへのアクセスを避ける" id="MISRAC2012-RULE_18_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_1" desc="ポインター オペランドと、そのオペランドを使用したポインター算術の結果であるポインターは、同じ配列の要素を指していなければならない" id="MISRAC2012-RULE_18_1-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_2" desc="ポインタ算術は配列または配列要素を指すポインタにのみ適用する" id="MISRAC2012-RULE_18_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_3" desc="同じ配列を指している場合を除き、ポインター型に >、>=、&lt;、&lt;= を適用してはならない" id="MISRAC2012-RULE_18_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_4" desc="+、-、+= および -= 演算子をポインター型の式に適用するべきではない" id="MISRAC2012-RULE_18_4-a" sev="4">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_5" desc="オブジェクトの宣言には、3 階層以上のポインター間接参照があってはならない" id="MISRAC2012-RULE_18_5-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_6" desc="自動記憶域のオブジェクトのアドレスを関数から返してはいけない" id="MISRAC2012-RULE_18_6-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_6" desc="自動記憶域のオブジェクトのアドレスを、オブジェクトが存在しなくなった後にも存在し続ける可能性がある別のオブジェクトに代入してはならない" id="MISRAC2012-RULE_18_6-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_7" desc="フレキシブル配列メンバーを宣言してはいけない" id="MISRAC2012-RULE_18_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_18_8" desc="可変長配列を使用してはいけない" id="MISRAC2012-RULE_18_8-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_19_1" desc="オブジェクトを重複するオブジェクトに代入してはならない" id="MISRAC2012-RULE_19_1-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_19_1" desc="オブジェクトを重複するオブジェクトに代入してはならない" id="MISRAC2012-RULE_19_1-b" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_19_1" desc="オーバーラップするオブジェクトにオブジェクトを代入またはコピーしてはならない" id="MISRAC2012-RULE_19_1-c" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_19_2" desc="union キーワードを使用してはいけない" id="MISRAC2012-RULE_19_2-a" sev="4">
               <Stats authTot="2;" authUrg="0;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_1" desc="プログラムは規格によって定められた翻訳限界を超えてはならない (c90)" id="MISRAC2012-RULE_1_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_1" desc="プログラムは規格によって定められた翻訳限界を超えてはならない (c99)" id="MISRAC2012-RULE_1_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_1" desc="プログラムは規格によって定められた翻訳限界を超えてはならない (c90)" id="MISRAC2012-RULE_1_1-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_1" desc="プログラムは規格によって定められた翻訳限界を超えてはならない (c99)" id="MISRAC2012-RULE_1_1-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="ゼロによる除算を避ける" id="MISRAC2012-RULE_1_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="初期化の前に使用しない" id="MISRAC2012-RULE_1_3-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="解放されたリソースを使用してはならない" id="MISRAC2012-RULE_1_3-c" sev="2">
               <Stats authTot="2;" authUrg="0;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="バッファー読み込み時のオーバーフローを避ける" id="MISRAC2012-RULE_1_3-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="バッファー書き込み時のオーバーフローを避ける" id="MISRAC2012-RULE_1_3-e" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="式の値は、規格が認めるどのような順序で評価されようとも、同じでなければならない" id="MISRAC2012-RULE_1_3-f" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="関数の引数の評価順序に依存するコードを書いてはならない" id="MISRAC2012-RULE_1_3-g" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="関数呼び出しおよび関数引数の評価順序に依存するコードを記述してはならない" id="MISRAC2012-RULE_1_3-h" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="関数呼び出しを含む式の評価順序に依存するコードを書いてはならない" id="MISRAC2012-RULE_1_3-i" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="オブジェクトは、シーケンス ポイントの間で、格納された値が式の評価によって 2 回以上変更されてはならない" id="MISRAC2012-RULE_1_3-j" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="2 つの隣接するシーケンス ポイント間で複数の volatile を使用してはならない" id="MISRAC2012-RULE_1_3-k" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="関数呼び出しの評価順序に依存するコードを書いてはならない" id="MISRAC2012-RULE_1_3-l" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="自動記憶域のオブジェクトのアドレスを関数から返してはいけない" id="MISRAC2012-RULE_1_3-m" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="自動記憶域のオブジェクトのアドレスを、オブジェクトが存在しなくなった後にも存在し続ける可能性がある別のオブジェクトに代入してはならない" id="MISRAC2012-RULE_1_3-n" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_1_3" desc="右シフト演算の左辺のオペランドは負数であってはならない" id="MISRAC2012-RULE_1_3-o" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_1" desc="ファイルの中で、#include 文の前には、他の前処理指令またはコメントだけを記述すべきである" id="MISRAC2012-RULE_20_1-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_10" desc="前処理演算子 # 及び ## を用いてはならない" id="MISRAC2012-RULE_20_10-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_11" desc="# 演算子があるマクロ パラメーターは、直前、直後に ## 演算子があってはいけない" id="MISRAC2012-RULE_20_11-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_12" desc="# または ## 演算子のオペランドとして使用されており、それ自体がマクロ置換の対象であるマクロ パラメーターは、それらの演算子のオペランドとしてだけ使用されなければならない" id="MISRAC2012-RULE_20_12-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_13" desc="前処理指令は、前処理で除外されたとしても、構文的に意味を持つようにしなければならない" id="MISRAC2012-RULE_20_13-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_14" desc="すべての #else、#elif、#endif 前処理指令は、それに関連する #if 指令または #ifdef 指令と同じファイル内に存在しなければならない" id="MISRAC2012-RULE_20_14-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_2" desc="文字 '、&quot;、/* または // をヘッダー ファイル名で使用してはならない" id="MISRAC2012-RULE_20_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_2" desc="ヘッダー ファイル名に \ 文字を使用するべきではない" id="MISRAC2012-RULE_20_2-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_3" desc="#include 指令の後には &lt;filename> または &quot;filename&quot; が続かなければならない" id="MISRAC2012-RULE_20_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_4" desc="C90 のキーワードと同じ名前を持つマクロを定義してはならない" id="MISRAC2012-RULE_20_4-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_4" desc="C99 のキーワードと同じ名前を持つマクロを定義してはならない" id="MISRAC2012-RULE_20_4-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_5" desc="#undef を用いてはならない" id="MISRAC2012-RULE_20_5-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_6" desc="関数形式マクロの引数には、前処理指令のような字句を記述してはならない" id="MISRAC2012-RULE_20_6-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_7" desc="# または ## のオペランドとして用いられる場合を除き、関数形式マクロの定義では、仮引数のそれぞれのインスタンスを括弧で囲まなければならない" id="MISRAC2012-RULE_20_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_8" desc="#if または #elif プリプロセッサ ディレクティブの制御式は 0 または 1 に評価されなければならない" id="MISRAC2012-RULE_20_8-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_20_9" desc="翻訳単位内に定義されていないマクロを前処理指令 #if および #elif で使用してはならない" id="MISRAC2012-RULE_20_9-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_1" desc="名前がアンダースコアで始まる識別子を #define または #undef してはならない" id="MISRAC2012-RULE_21_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_1" desc="予約済み識別子及び標準ライブラリのマクロや関数は、定義または再定義または定義の解消をしてはならない (C90 コード)" id="MISRAC2012-RULE_21_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_1" desc="予約済み識別子及び標準ライブラリのマクロや関数は、定義または再定義または定義の解消をしてはならない (C99 コード)" id="MISRAC2012-RULE_21_1-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_1" desc="defined 識別子を #define または #undef してはならない" id="MISRAC2012-RULE_21_1-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_10" desc="時刻を使用する標準 C ライブラリ関数を使用しないようにする" id="MISRAC2012-RULE_21_10-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_11" desc="&lt;tgmath.h> ヘッダーをインクルードしない" id="MISRAC2012-RULE_21_11-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_12" desc="&lt;fenv.h> の例外処理を使用してはいけない" id="MISRAC2012-RULE_21_12-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_13" desc="ctype.h ライブラリ関数に誤った値を渡してはならない" id="MISRAC2012-RULE_21_13-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_14" desc="標準ライブラリ関数 memcmp を null 終端文字の比較に使用してはならない" id="MISRAC2012-RULE_21_14-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_15" desc="標準ライブラリ関数 memcmp、memmove および memcmp へのポインター引数は、互換性のある型の修飾付きおよび修飾なし版へのポインターでなければならない" id="MISRAC2012-RULE_21_15-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_16" desc="標準ライブラリ関数 memcmp へのポインター引数は、ポインター型、実質的な signed 型、実質的な unsigned 型、実質的なブール型、または実質的な列挙型を指していなければならない" id="MISRAC2012-RULE_21_16-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_17" desc="ゼロで終わっていない文字列の読み込みによるオーバーフローを避ける" id="MISRAC2012-RULE_21_17-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_17" desc="バッファー書き込み時のオーバーフローを避ける" id="MISRAC2012-RULE_21_17-b" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_18" desc="string.h の関数に渡される size_t 引数には適切な値がなければならない" id="MISRAC2012-RULE_21_18-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_19" desc="標準ライブラリ関数 localeconv、getenv、setlocale または strerror から返されたポインターは、const 修飾された型へのポインターとしてだけ使用する" id="MISRAC2012-RULE_21_19-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_19" desc="lconv 構造体のメンバーによって指し示される文字列を変更してはならない" id="MISRAC2012-RULE_21_19-b" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_2" desc="標準ライブラリのマクロ、オブジェクト、関数の名前を再利用してはならない" id="MISRAC2012-RULE_21_2-a" sev="2">
               <Stats authTot="19;" authUrg="4;" total="19" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_2" desc="標準ライブラリのマクロ、オブジェクト、関数の名前を再利用してはならない (C90)" id="MISRAC2012-RULE_21_2-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_2" desc="標準ライブラリのマクロ、オブジェクト、関数の名前を再利用してはならない (C99)" id="MISRAC2012-RULE_21_2-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_20" desc="特定の標準ライブラリ関数から返されたポインターは、そのあとの同じ関数または関連する関数の呼び出しで使用してはならない" id="MISRAC2012-RULE_21_20-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_3" desc="動的なヒープ メモリの割り当ては、用いてはならない" id="MISRAC2012-RULE_21_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_4" desc="setjmp マクロと longjmp 関数は、用いてはならない" id="MISRAC2012-RULE_21_4-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_4" desc="&lt;setjmp.h> ヘッダーをインクルードしてはいけない" id="MISRAC2012-RULE_21_4-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_5" desc="ヘッダー ファイル &lt;signal.h> をインクルードしてはいけない" id="MISRAC2012-RULE_21_5-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_5" desc="&lt;signal.h> のシグナル処理を用いてはならない" id="MISRAC2012-RULE_21_5-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_6" desc="標準ライブラリの入出力関数を使用してはいけない" id="MISRAC2012-RULE_21_6-a" sev="2">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_7" desc="&lt;stdlib.h>ライブラリのライブラリ関数 atof、atoi、atol は、用いてはならない" id="MISRAC2012-RULE_21_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_8" desc="stdlib.h または cstdlib ライブラリの abort() 関数を使用しない" id="MISRAC2012-RULE_21_8-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_8" desc="stdlib.h または cstdlib ライブラリの exit() 関数を使用しない" id="MISRAC2012-RULE_21_8-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_8" desc="stdlib.h または cstdlib ライブラリの system() 関数を使用しない" id="MISRAC2012-RULE_21_8-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_8" desc="stdlib.h または cstdlib ライブラリの 'getenv() 関数を使用しない" id="MISRAC2012-RULE_21_8-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_21_9" desc="&lt;stdlib.h> のライブラリ関数 bsearch および qsort を使用してはいけない" id="MISRAC2012-RULE_21_9-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_1" desc="リソースが解放されていることを確認する" id="MISRAC2012-RULE_22_1-a" sev="2">
               <Stats authTot="3;" authUrg="0;" total="3" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_10" desc="errno 値を適切に使用する" id="MISRAC2012-RULE_22_10-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_2" desc="解放されたリソースを使用してはならない" id="MISRAC2012-RULE_22_2-a" sev="1">
               <Stats authTot="2;" authUrg="2;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_2" desc="無効なポインタを使用してリソースを解放してはならない" id="MISRAC2012-RULE_22_2-b" sev="1">
               <Stats authTot="4;" authUrg="4;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_3" desc="1 つのファイルを別のストリームで同時に読み取りアクセス用と書き込みアクセス用に開いてはならない" id="MISRAC2012-RULE_22_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_4" desc="読み取り専用として開かれたストリームへの書き込みを避ける" id="MISRAC2012-RULE_22_4-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_5" desc="FILE オブジェクトへのポインターを間接参照してはいけない" id="MISRAC2012-RULE_22_5-a" sev="1">
               <Stats authTot="13;" authUrg="13;" total="13" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_5" desc="FILE オブジェクトへのポインターをライブラリ関数から間接参照してはいけない" id="MISRAC2012-RULE_22_5-b" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_6" desc="解放されたリソースを使用してはならない" id="MISRAC2012-RULE_22_6-a" sev="1">
               <Stats authTot="2;" authUrg="2;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_7" desc="マクロの EOF と標準ライブラリ関数から返された未変更の戻り値を比較するべきである" id="MISRAC2012-RULE_22_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_8" desc="errno 値を適切に使用する" id="MISRAC2012-RULE_22_8-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_22_9" desc="errno 値を適切に使用する" id="MISRAC2012-RULE_22_9-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_1" desc="else ブロックに到達しないコードがあってはならない" id="MISRAC2012-RULE_2_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_1" desc="return、break、continue および goto 文の後に到達しないコードがあってはならない" id="MISRAC2012-RULE_2_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_1" desc="if、do while、while、for ブロックに到達しないコードがあってはならない" id="MISRAC2012-RULE_2_1-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_1" desc="switch 文に到達しないコードがあってはならない" id="MISRAC2012-RULE_2_1-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_1" desc="for ループに到達しないコードがあってはならない" id="MISRAC2012-RULE_2_1-e" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_1" desc="if または switch の後に到達しないコードがあってはならない" id="MISRAC2012-RULE_2_1-f" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_1" desc="while、for、do...while ループの中の if または switch の後に到達できないコードがあってはならない" id="MISRAC2012-RULE_2_1-g" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_2" desc="すべての空でない文は、どのように実行されても1つ以上の副作用を持つか、制御フローを変えなければならない" id="MISRAC2012-RULE_2_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_2" desc="未使用の値を避ける" id="MISRAC2012-RULE_2_2-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_3" desc="関数は未使用の型宣言を持つべきではない" id="MISRAC2012-RULE_2_3-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_3" desc="ソース ファイルは未使用の型宣言を持つべきではない" id="MISRAC2012-RULE_2_3-b" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_4" desc="関数は未使用のローカル タグ宣言を持つべきではない" id="MISRAC2012-RULE_2_4-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_4" desc="ソース ファイルは未使用のタグ宣言を持つべきではない" id="MISRAC2012-RULE_2_4-b" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_5" desc="ソース ファイルは未使用のマクロ宣言を持つべきではない" id="MISRAC2012-RULE_2_5-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_6" desc="関数は未使用のラベル宣言を持つべきではない" id="MISRAC2012-RULE_2_6-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_2_7" desc="関数に未使用のパラメーターがあってはならない" id="MISRAC2012-RULE_2_7-a" sev="4">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_3_1" desc="文字列 /* を C スタイルコメント内で用いてはならない" id="MISRAC2012-RULE_3_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_3_1" desc="文字シーケンス  // を C スタイル コメントの中で使用してはいけない" id="MISRAC2012-RULE_3_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_3_1" desc="文字シーケンス  /* を C++ スタイル コメントの中で使用してはいけない" id="MISRAC2012-RULE_3_1-c" sev="2">
               <Stats authTot="30;" authUrg="9;" total="30" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_3_2" desc="// コメントで行の結合を使用してはならない" id="MISRAC2012-RULE_3_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_4_1" desc="8 進または 16 進のエスケープ シーケンスは終了させなければならない" id="MISRAC2012-RULE_4_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_4_2" desc="3 文字表記は、用いてはならない" id="MISRAC2012-RULE_4_2-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_1" desc="外部識別子は区別できなければならない" id="MISRAC2012-RULE_5_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_2" desc="ファイル スコープおよび同じ名前空間で宣言された識別子は区別できなければならない (c90)" id="MISRAC2012-RULE_5_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_2" desc="ファイル スコープおよび同じ名前空間で宣言された識別子は区別できなければならない (c99)" id="MISRAC2012-RULE_5_2-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_2" desc="同じブロック スコープおよび同じ名前空間で宣言された識別子は区別できなければならない (c90)" id="MISRAC2012-RULE_5_2-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_2" desc="同じブロック スコープおよび同じ名前空間で宣言された識別子は区別できなければならない (c99)" id="MISRAC2012-RULE_5_2-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_3" desc="ローカルまたは関数プロトタイプ スコープで宣言された識別子は、グローバルまたは名前空間のスコープで宣言された識別子を隠蔽してはならない" id="MISRAC2012-RULE_5_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_3" desc="内側のローカル スコープで宣言された識別子は、外側のローカル スコープで宣言された識別子を隠蔽してはならない" id="MISRAC2012-RULE_5_3-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_4" desc="マクロの名前はマクロのパラメーターと違っているべきである(c90)" id="MISRAC2012-RULE_5_4-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_4" desc="マクロの名前はマクロのパラメーターと違っているべきである (c99)" id="MISRAC2012-RULE_5_4-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_4" desc="マクロの名前は現在定義されている他のマクロの名前と違っているべきである(c90)" id="MISRAC2012-RULE_5_4-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_4" desc="マクロの名前は現在定義されている他のマクロの名前と違っているべきである(c99)" id="MISRAC2012-RULE_5_4-d" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_5" desc="プリプロセスの前に存在するマクロの名前は、プリプロセス後に存在する識別子と違っているべきである (c90)" id="MISRAC2012-RULE_5_5-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_5" desc="プリプロセスの前に存在するマクロの名前は、プリプロセス後に存在する識別子と違っているべきである (c99)" id="MISRAC2012-RULE_5_5-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_6" desc="typedef名を再利用してはならない" id="MISRAC2012-RULE_5_6-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_6" desc="typedef 名を typedef 名として再利用してはならない" id="MISRAC2012-RULE_5_6-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_7" desc="タグ名を他の目的で再利用してはならない" id="MISRAC2012-RULE_5_7-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_7" desc="タグ名は、固有の識別子でなければならない" id="MISRAC2012-RULE_5_7-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_8" desc="外部リンケージを持つオブジェクトや関数を定義する識別子はユニークでなければならない" id="MISRAC2012-RULE_5_8-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_9" desc="静的記憶域期間を持つオブジェクトや関数識別子は、再使用すべきでない" id="MISRAC2012-RULE_5_9-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_5_9" desc="静的記憶域期間を持つオブジェクトや関数識別子は、再使用すべきでない" id="MISRAC2012-RULE_5_9-b" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_6_1" desc="ビットフィールドは、unsigned int 型または signed int 型だけで定義しなければならない" id="MISRAC2012-RULE_6_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_6_2" desc="signed integer 型の名前付きのビットフィールドは 2 ビット以上の長さでなければならない" id="MISRAC2012-RULE_6_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_7_1" desc="ゼロ以外の 8 進定数を使用してはいけない" id="MISRAC2012-RULE_7_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_7_2" desc="すべての符号なし型の定数には、接尾辞 U を付けなければならない" id="MISRAC2012-RULE_7_2-a" sev="2">
               <Stats authTot="1;" authUrg="1;" total="1" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_7_3" desc="long 型を指示するには、小文字の l ではなく大文字の L を使用する" id="MISRAC2012-RULE_7_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_7_4" desc="文字列リテラルを変更してはならない" id="MISRAC2012-RULE_7_4-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_1" desc="オブジェクトまたは関数を宣言または定義するときは、常にその型を明記しなければならない" id="MISRAC2012-RULE_8_1-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_1" desc="オブジェクトまたは関数を宣言または定義するときは、常にその型を明記しなければならない" id="MISRAC2012-RULE_8_1-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_10" desc="インライン関数は static 記憶域クラスを使って宣言しなければならない" id="MISRAC2012-RULE_8_10-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_11" desc="外部結合を持つ配列を宣言するときは、明示的にサイズを記述するか、初期化によって暗黙的にサイズを定義しなければならない" id="MISRAC2012-RULE_8_11-a" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_12" desc="列挙子リストで、非明示的に指定された列挙定数の値は一意でなければならない" id="MISRAC2012-RULE_8_12-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_13" desc="関数プロトタイプのポインタ仮引数は、指し示しているオブジェクトを変更する目的でポインタが用いられていない場合、 const へのポインタとして宣言すべきである" id="MISRAC2012-RULE_8_13-a" sev="4">
               <Stats authTot="1;" authUrg="0;" total="1" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_13" desc="仮引数の型は、指し示しているオブジェクトを変更する目的でポインタが用いられていない場合、 const へのポインタの typedef として宣言すべきである" id="MISRAC2012-RULE_8_13-b" sev="4">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_14" desc="restrict 型修飾子を使用してはいけない" id="MISRAC2012-RULE_8_14-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_2" desc="関数プロトタイプ宣言では、すべての仮引数に対して識別子を指定しなければならない" id="MISRAC2012-RULE_8_2-a" sev="2">
               <Stats authTot="1;" authUrg="0;" total="1" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_2" desc="関数型には名前付きのパラメーターがなければならない" id="MISRAC2012-RULE_8_2-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_2" desc="関数型はプロトタイプ形式でなければならない" id="MISRAC2012-RULE_8_2-c" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_3" desc="オブジェクトまたは関数が 2 回以上宣言される場合、型は互換性がなければならない" id="MISRAC2012-RULE_8_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_3" desc="関数の宣言とその定義で用いられる識別子とは一致しなければならない" id="MISRAC2012-RULE_8_3-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_4" desc="外部リンケージを持つオブジェクトまたは関数を定義する場合、宣言が参照できなければならない" id="MISRAC2012-RULE_8_4-a" sev="2">
               <Stats authTot="2;" authUrg="0;" total="2" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_4" desc="オブジェクトまたは関数が 2 回以上宣言される場合、型は互換性がなければならない" id="MISRAC2012-RULE_8_4-b" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_5" desc="翻訳単位の中で、外部オブジェクトまたは外部関数に 2 つ以上の非定義宣言があってはならない" id="MISRAC2012-RULE_8_5-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_6" desc="外部リンケージを持つ識別子は、外部定義を 1 つだけ持たなければならない" id="MISRAC2012-RULE_8_6-a" sev="2">
               <Stats authTot="4;" authUrg="1;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_7" desc="関数およびオブジェクトが 1 つの翻訳単位でだけ参照される場合、外部リンケージが定義されてはならない" id="MISRAC2012-RULE_8_7-a" sev="4">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_8" desc="static 記憶域クラス指定子は、内部結合を持つオブジェクト並びに関数の定義および宣言に対して用いなければならない" id="MISRAC2012-RULE_8_8-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_8_9" desc="オブジェクトが単一の関数内だけでアクセスされている場合は、そのオブジェクトをブロック スコープで定義しなければならない" id="MISRAC2012-RULE_8_9-a" sev="4">
               <Stats authTot="1;" authUrg="0;" total="1" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_9_1" desc="初期化の前に使用しない" id="MISRAC2012-RULE_9_1-a" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_9_2" desc="集成体または共用体の初期化は括弧に囲まれていなければならない" id="MISRAC2012-RULE_9_2-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_9_3" desc="配列を部分的に初期化してはならない" id="MISRAC2012-RULE_9_3-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_9_4" desc="オブジェクトの要素を複数回初期化してはならない" id="MISRAC2012-RULE_9_4-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRAC2012-RULE_9_5" desc="指定された初期化子が配列オブジェクトの初期化に使用されている場合、配列のサイズを明示的に指定する必要がある" id="MISRAC2012-RULE_9_5-a" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
         </RulesList>
         <CategoriesList>
            <Category desc="MISRA C 2012" name="MISRAC2012" total="332">
               <Category desc="Rule 11.3 (Required) オブジェクト型へのポインターと別のオブジェクト型へのポインターとの間で変換を行ってはならない" name="MISRAC2012-RULE_11_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.13 (Required) 最初のトークンが # の行は、有効な前処理指令でなければならない" name="MISRAC2012-RULE_20_13" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.5 (Required) 外部オブジェクトまたは関数はただ 1 つのファイルで 1 回だけ宣言されなければならない" name="MISRAC2012-RULE_8_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 11.4 (Advisory) オブジェクトへのポインターと整数型との間で変換を行ってはならない" name="MISRAC2012-RULE_11_4" total="1">
                  <Stats authTot="2;" authUrg="0;" total="2" />
               </Category>
               <Category desc="Rule 20.12 (Required) # または ## 演算子のオペランドとして使用されるマクロ パラメーターで、それ自体がさらにマクロ置換の対象となるものは、これらの演算子のオペランドとしてだけ使用しなければならない" name="MISRAC2012-RULE_20_12" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.6 (Required) 外部リンケージを持つ識別子は、外部定義を 1 つだけ持たなければならない" name="MISRAC2012-RULE_8_6" total="1">
                  <Stats authTot="4;" authUrg="1;" total="4" />
               </Category>
               <Category desc="Rule 11.5 (Advisory) void へのポインターをオブジェクトへのポインターに変換してはならない" name="MISRAC2012-RULE_11_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 15.1 (Advisory) goto 文を用いてはならない" name="MISRAC2012-RULE_15_1" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.11 (Required) # 演算子の直後にあるマクロ パラメーターの直後に ## 演算子があってはならない" name="MISRAC2012-RULE_20_11" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.3 (Required) オブジェクトまたは関数のすべての宣言は同一の名前と型修飾子を使用しなければならない" name="MISRAC2012-RULE_8_3" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 11.6 (Required) void へのポインターと数値型との間でキャストしてはならない" name="MISRAC2012-RULE_11_6" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 15.2 (Required) goto 文は同じ関数ボディ内の後の部分に宣言されたラベルにジャンプしなければならない" name="MISRAC2012-RULE_15_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.10 (Advisory) 前処理演算子 # 及び ## を用いてはならない" name="MISRAC2012-RULE_20_10" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.4 (Required) 外部リンケージを持つオブジェクトまたは関数を定義する場合、宣言が参照できなければならない" name="MISRAC2012-RULE_8_4" total="2">
                  <Stats authTot="2;" authUrg="0;" total="2" />
               </Category>
               <Category desc="Rule 11.7 (Required) オブジェクトへのポインターと非整数数値型との間でキャストしてはならない" name="MISRAC2012-RULE_11_7" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 15.3 (Required) goto 文によって参照されるラベルは、同じブロックまたは goto 文を含む外側のブロックで宣言されなければならない" name="MISRAC2012-RULE_15_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.9 (Advisory) オブジェクトが単一の関数内だけでアクセスされている場合は、そのオブジェクトをブロック スコープで定義しなければならない" name="MISRAC2012-RULE_8_9" total="1">
                  <Stats authTot="1;" authUrg="0;" total="1" />
               </Category>
               <Category desc="Rule 11.8 (Required) ポインタで指し示された型から const 修飾や volatile 修飾を取り除くキャストを行ってはならない" name="MISRAC2012-RULE_11_8" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 15.4 (Advisory) 反復文では、ループを終了するために複数の break 文または goto 文を使用してはならない" name="MISRAC2012-RULE_15_4" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 11.9 (Required) マクロの NULL は、整数 null ポインター定数の唯一許可された形式でなければならない" name="MISRAC2012-RULE_11_9" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 15.5 (Advisory) 関数では、関数の最後に唯一の出口がなければならない" name="MISRAC2012-RULE_15_5" total="1">
                  <Stats authTot="13;" authUrg="0;" total="13" />
               </Category>
               <Category desc="Rule 19.1 (Mandatory) オブジェクトを重複するオブジェクトに代入またはコピーしてはならない" name="MISRAC2012-RULE_19_1" total="3">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.7 (Advisory) 関数およびオブジェクトが 1 つの翻訳単位でだけ参照される場合、外部リンケージが定義されてはならない" name="MISRAC2012-RULE_8_7" total="1">
                  <Stats authTot="4;" authUrg="0;" total="4" />
               </Category>
               <Category desc="Rule 15.6 (Required) switch、while、do...while 、for 文の本体を構成する文は、複合文でなければならない" name="MISRAC2012-RULE_15_6" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 19.2 (Advisory) union キーワードを使用してはいけない" name="MISRAC2012-RULE_19_2" total="1">
                  <Stats authTot="2;" authUrg="0;" total="2" />
               </Category>
               <Category desc="Rule 8.8 (Required) static 記憶域クラス指定子は、内部結合を持つオブジェクト並びに関数の定義および宣言に対して用いなければならない" name="MISRAC2012-RULE_8_8" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.14 (Required) 外部ソースから取得した値の正当性をチェックする必要がある" name="MISRAC2012-DIR_4_14" total="12">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 15.7 (Required) すべてのif...else if 構文は、else 節で終了しなければならない" name="MISRAC2012-RULE_15_7" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.13 (Advisory) リソースに対する操作を提供するための関数は適切な順序で呼び出されるべきである" name="MISRAC2012-DIR_4_13" total="5">
                  <Stats authTot="9;" authUrg="0;" total="9" />
               </Category>
               <Category desc="Dir 4.12 (Required) 動的なメモリの割り当ては、用いてはならない" name="MISRAC2012-DIR_4_12" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.11 (Required) ライブラリ関数に渡す値の正当性をチェックする必要がある" name="MISRAC2012-DIR_4_11" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.10 (Required) ヘッダー ファイルの内容が 2 回以上インクルードされるのを防止するための予防措置を取るべきである" name="MISRAC2012-DIR_4_10" total="1">
                  <Stats authTot="4;" authUrg="1;" total="4" />
               </Category>
               <Category desc="Rule 20.14 (Required) すべての #else、#elif および #endif プリプロセッサ ディレクティブは、関連する #if、#ifdef または #ifndef ディレクティブと同じファイルに存在しなければならない" name="MISRAC2012-RULE_20_14" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 4.1 (Required) 8 進または 16 進のエスケープ シーケンスは終了させなければならない" name="MISRAC2012-RULE_4_1" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 4.2 (Advisory)  3 文字表記を使用してはいけない" name="MISRAC2012-RULE_4_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.1 (Required) 型は明示的に指定されなければならない" name="MISRAC2012-RULE_8_1" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.2 (Required) 関数型は名前付きパラメーターを持つプロトタイプ形式でなければならない" name="MISRAC2012-RULE_8_2" total="3">
                  <Stats authTot="1;" authUrg="0;" total="1" />
               </Category>
               <Category desc="Rule 11.1 (Required) 関数へのポインターとそれ以外の型との間で変換を行ってはならない" name="MISRAC2012-RULE_11_1" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 11.2 (Required) 不完全な型へのポインターとそれ以外の型との間で変換を行ってはならない" name="MISRAC2012-RULE_11_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 22.3 (Required) 1 つのファイルを別のストリームで同時に読み取りアクセス用と書き込みアクセス用に開いてはならない" name="MISRAC2012-RULE_22_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 22.4 (Mandatory) 読み取り専用として開かれたストリームに書き込みを行ってはならない" name="MISRAC2012-RULE_22_4" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 22.5 (Mandatory) FILE オブジェクトへのポインターを間接参照してはいけない" name="MISRAC2012-RULE_22_5" total="2">
                  <Stats authTot="13;" authUrg="13;" total="13" />
               </Category>
               <Category desc="Rule 22.6 (Mandatory) FILE を指すポインターの値は、関連付けられたストリームが閉じられた後に使用してはならない" name="MISRAC2012-RULE_22_6" total="1">
                  <Stats authTot="2;" authUrg="2;" total="2" />
               </Category>
               <Category desc="Rule 22.7 (Required) マクロ EOF は、EOF を返す可能性がある標準ライブラリ関数の変更されていない戻り値とだけ比較する" name="MISRAC2012-RULE_22_7" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 22.8 (Required) errno 設定関数の呼び出し前に、errno に 0 を設定する" name="MISRAC2012-RULE_22_8" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 22.9 (Required) errno 設定関数の呼び出し後に、errno と 0 を比較してチェックする" name="MISRAC2012-RULE_22_9" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 22.1 (Required) 標準ライブラリ関数を使用して動的に取得したリソースは、明示的に解放しなければならない" name="MISRAC2012-RULE_22_1" total="1">
                  <Stats authTot="3;" authUrg="0;" total="3" />
               </Category>
               <Category desc="Rule 22.2 (Mandatory) メモリ ブロックは、標準ライブラリ関数を使用して割り当てられた場合にだけ解放しなければならない" name="MISRAC2012-RULE_22_2" total="2">
                  <Stats authTot="6;" authUrg="6;" total="6" />
               </Category>
               <Category desc="Rule 10.4 (Required) 通常の算術変換が行われる演算子の 2 つのオペランドは、同じ実質的な型カテゴリでなければならない" name="MISRAC2012-RULE_10_4" total="2">
                  <Stats authTot="4;" authUrg="1;" total="4" />
               </Category>
               <Category desc="Rule 10.5 (Advisory) 式の値を適切でない実質的な型にキャストしてはならない" name="MISRAC2012-RULE_10_5" total="3">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 14.1 (Required) ループ カウンターには実質的な浮動小数点型を用いてはならない" name="MISRAC2012-RULE_14_1" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 10.6 (Required) 複合式の値をより大きい実質的な型を持つオブジェクトに代入してはならない" name="MISRAC2012-RULE_10_6" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 14.2 (Required) for ループは整形式でなければならない" name="MISRAC2012-RULE_14_2" total="4">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 7.4 (Required) 「const 修飾された char」へのポインターでない限り、オブジェクトに文字列リテラルを代入してはならない" name="MISRAC2012-RULE_7_4" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 10.7 (Required) 通常の数値変換が行われる演算子のオペランドの 1 つとして複合式が使用される場合、他方のオペランドはより大きい実質的な型を持つ型であってはならない" name="MISRAC2012-RULE_10_7" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 14.3 (Required) 制御式が不変であってはならない" name="MISRAC2012-RULE_14_3" total="30">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 10.8 (Required) 複合式の値を別の実質的な型カテゴリまたはより大きい実質的な型にキャストしてはならない" name="MISRAC2012-RULE_10_8" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 14.4 (Required) if 文の制御式と反復文の制御式は本質的にブール型でなければならない" name="MISRAC2012-RULE_14_4" total="1">
                  <Stats authTot="1;" authUrg="0;" total="1" />
               </Category>
               <Category desc="Rule 18.1 (Required) ポインター オペランドに対する算術の結果として得られたポインターは、ポインター オペランドと同じ配列の要素を指していなければならない" name="MISRAC2012-RULE_18_1" total="3">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 18.2 (Required) ポインタ間の減算は同じ配列の要素を指すポインタにのみ適用する" name="MISRAC2012-RULE_18_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 18.3 (Required) 関係演算子 >、>=、&lt;、&lt;= は、同じ配列を扱う場合を除き、ポインター型に適用してはならない" name="MISRAC2012-RULE_18_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 18.4 (Advisory) 演算子 +、-、+= および -= をポインター型の式に適用してはならない" name="MISRAC2012-RULE_18_4" total="1">
                  <Stats authTot="4;" authUrg="0;" total="4" />
               </Category>
               <Category desc="Rule 18.5 (Advisory) 宣言には、3 階層以上のポインター間接参照があってはならない" name="MISRAC2012-RULE_18_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 18.6 (Required) 自動記憶域のオブジェクトのアドレスを、オブジェクトが存在しなくなった後にも存在し続ける別のオブジェクトにコピーしてはならない" name="MISRAC2012-RULE_18_6" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 18.7 (Required) フレキシブル配列メンバーを宣言してはいけない" name="MISRAC2012-RULE_18_7" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 18.8 (Required) 可変長配列を使用してはいけない" name="MISRAC2012-RULE_18_8" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 3.2 (Required) // コメントで行の結合を使用してはならない" name="MISRAC2012-RULE_3_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 3.1 (Required) 文字シーケンス /* および // をコメント内で使用してはならない" name="MISRAC2012-RULE_3_1" total="3">
                  <Stats authTot="30;" authUrg="9;" total="30" />
               </Category>
               <Category desc="Rule 7.2 (Required) すべての符号なし型の定数には、接尾辞 u または U を付けなければならない" name="MISRAC2012-RULE_7_2" total="1">
                  <Stats authTot="1;" authUrg="1;" total="1" />
               </Category>
               <Category desc="Rule 10.1 (Required) オペランドの実質的な型が不適切であってはならない" name="MISRAC2012-RULE_10_1" total="7">
                  <Stats authTot="28;" authUrg="3;" total="28" />
               </Category>
               <Category desc="Rule 7.3 (Required) 小文字の l をリテラルの接尾辞で使用してはいけない" name="MISRAC2012-RULE_7_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 10.2 (Required) 実質的な文字型の式を加算または減算演算で不適切に使用するべきではない" name="MISRAC2012-RULE_10_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 10.3 (Required) 式の値をより狭い実質的な型または実質的な型のカテゴリが異なる型を持つオブジェクトに代入してはならない" name="MISRAC2012-RULE_10_3" total="2">
                  <Stats authTot="11;" authUrg="6;" total="11" />
               </Category>
               <Category desc="Rule 7.1 (Required) 8 進定数を使用してはいけない" name="MISRAC2012-RULE_7_1" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.14 (Required) 標準ライブラリ関数 memcmp を null 終端文字の比較に使用してはならない" name="MISRAC2012-RULE_21_14" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.4 (Required) ヘッダー ファイル &lt;setjmp.h> は、用いてはならない" name="MISRAC2012-RULE_21_4" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.13 (Mandatory) &lt;ctype.h> ライブラリの関数に渡される値は 'unsigned char' として表現できる値または 'EOF' でなければならない" name="MISRAC2012-RULE_21_13" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.5 (Required) ヘッダー ファイル &lt;signal.h> は、用いてはならない" name="MISRAC2012-RULE_21_5" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.12 (Advisory) &lt;fenv.h> の例外処理を使用してはいけない" name="MISRAC2012-RULE_21_12" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.6 (Required) 標準ライブラリの入出力関数を使用してはいけない" name="MISRAC2012-RULE_21_6" total="1">
                  <Stats authTot="4;" authUrg="0;" total="4" />
               </Category>
               <Category desc="Rule 21.11 (Required) ヘッダー ファイル &lt;tgmath.h> を使用してはいけない" name="MISRAC2012-RULE_21_11" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.7 (Required) &lt;stdlib.h> の atof、atoi、atol および atoll 関数は、用いてはならない" name="MISRAC2012-RULE_21_7" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.10 (Required) 標準ライブラリの日付と時刻の関数を使用しないようにする" name="MISRAC2012-RULE_21_10" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.8 (Required) &lt;stdlib.h> ライブラリの関数 abort、exit、getenv、system は用いてはならない" name="MISRAC2012-RULE_21_8" total="4">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.9 (Required) &lt;stdlib.h> のライブラリ関数 bsearch および qsort を使用してはいけない" name="MISRAC2012-RULE_21_9" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.19 (Mandatory) 標準ライブラリ関数 localeconv、getenv、setlocale または strerror から返されたポインターは、const 修飾された型へのポインターとしてだけ使用する" name="MISRAC2012-RULE_21_19" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.18 (Mandatory) string.h の関数に渡される size_t 引数には適切な値がなければならない" name="MISRAC2012-RULE_21_18" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.17 (Mandatory) &lt;string.h> の文字列操作関数を使用した結果、ポインター パラメーターが参照するオブジェクトの境界外にアクセスしてはならない" name="MISRAC2012-RULE_21_17" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.16 (Required) 標準ライブラリ関数 memcmp へのポインター引数は、ポインター型、実質的な符号付き型、実質的な符号なし型、実質的なブール型または実質的な列挙型のいずれかを指していなければならない" name="MISRAC2012-RULE_21_16" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.15 (Required) 標準ライブラリ関数 memcpy、memmove および memcmp へのポインター引数は、互換性がある型の修飾付きまたは修飾なしバージョンへのポインターでなければならない" name="MISRAC2012-RULE_21_15" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.1 (Required) #define および #undef を予約済み識別子または予約済みマクロ名に対して使用してはらなない" name="MISRAC2012-RULE_21_1" total="4">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.2 (Required) 予約済み識別子またはマクロ名を宣言してはならない" name="MISRAC2012-RULE_21_2" total="3">
                  <Stats authTot="19;" authUrg="4;" total="19" />
               </Category>
               <Category desc="Rule 21.3 (Required) &lt;stdlib.h> のメモリの割り当て/解放の関数は、用いてはならない" name="MISRAC2012-RULE_21_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 13.1 (Required) 初期化リストに永続的な副作用が含まれていてはならない" name="MISRAC2012-RULE_13_1" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 13.2 (Required) 式の値およびその永続的な副作用は、許可されるすべての評価順序で同じでなければならない" name="MISRAC2012-RULE_13_2" total="7">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 13.3 (Advisory) インクリメント (++) またはデクリメント (--) 演算子がある完全な式は、インクリメント/デクリメント演算子によるもの以外の他の副作用の可能性があってはならない" name="MISRAC2012-RULE_13_3" total="1">
                  <Stats authTot="1;" authUrg="0;" total="1" />
               </Category>
               <Category desc="Rule 13.4 (Advisory) 代入演算子の結果を使用するべきではない" name="MISRAC2012-RULE_13_4" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 13.5 (Required) 論理演算子 &amp;&amp; または || の右側のオペランドには、永続的な副作用があってはならない" name="MISRAC2012-RULE_13_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 17.1 (Required) &lt;stdarg.h> の機能を使用してはならない" name="MISRAC2012-RULE_17_1" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 13.6 (Mandatory) sizeof 演算子のオペランドに副作用を持つ可能性がある式が含まれていてはならない" name="MISRAC2012-RULE_13_6" total="3">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 17.2 (Required) 関数は、直接的か間接的かにかかわらず、その関数自身を呼び出してはならない" name="MISRAC2012-RULE_17_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 21.20 (Mandatory) 標準ライブラリ関数 asctime、ctime、gmtime、localtime、localeconv、getenv、setlocale または strerror から返されたポインターは、同じ関数のその後の呼び出しで使用してはならない" name="MISRAC2012-RULE_21_20" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 17.3 (Mandatory) 関数を暗黙的に宣言してはならない" name="MISRAC2012-RULE_17_3" total="1">
                  <Stats authTot="1;" authUrg="1;" total="1" />
               </Category>
               <Category desc="Rule 17.4 (Mandatory) 戻り値の型が非 void の関数の場合、すべての出口で、式を持つ明示的な return 文を記述しなければならない" name="MISRAC2012-RULE_17_4" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 17.5 (Advisory) 配列型として宣言されたパラメーターに対応する関数引数には、適切な数の要素がなければならない" name="MISRAC2012-RULE_17_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 17.6 (Mandatory) 配列パラメーターの宣言の [ ] の中に static キーワードが含まれていてはならない" name="MISRAC2012-RULE_17_6" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 17.7 (Required) 戻り型が void ではない関数によって返却される値を使用しなければならない" name="MISRAC2012-RULE_17_7" total="2">
                  <Stats authTot="2;" authUrg="2;" total="2" />
               </Category>
               <Category desc="Rule 17.8 (Advisory) 関数のパラメーターを変更するべきではない" name="MISRAC2012-RULE_17_8" total="1">
                  <Stats authTot="2;" authUrg="0;" total="2" />
               </Category>
               <Category desc="Rule 2.3 (Advisory) プロジェクトに未使用の型宣言が含まれていてはならない" name="MISRAC2012-RULE_2_3" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 2.4 (Advisory) プロジェクトに未使用のタグ宣言が含まれていてはならない" name="MISRAC2012-RULE_2_4" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 2.1 (Required) プロジェクトに到達できないコードが含まれていてはならない" name="MISRAC2012-RULE_2_1" total="7">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 2.2 (Required) デッド コードがあってはならない" name="MISRAC2012-RULE_2_2" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 2.7 (Advisory) 関数は未使用のパラメーターを持つべきではない" name="MISRAC2012-RULE_2_7" total="1">
                  <Stats authTot="4;" authUrg="0;" total="4" />
               </Category>
               <Category desc="Rule 2.5 (Advisory) プロジェクトに未使用のマクロ宣言が含まれていてはならない" name="MISRAC2012-RULE_2_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 6.1 (Required) ビットフィールドは適切な型で宣言しなければならない" name="MISRAC2012-RULE_6_1" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 2.6 (Advisory) 関数は未使用のラベル宣言を持つべきではない" name="MISRAC2012-RULE_2_6" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 6.2 (Required) 1 ビットの名前付きのビットフィールドは signed 型であってはならない" name="MISRAC2012-RULE_6_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.5 (Advisory)  #undef を使用してはいけない" name="MISRAC2012-RULE_20_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.6 (Required) 関数形式マクロの引数には、前処理指令のような字句を記述してはならない" name="MISRAC2012-RULE_20_6" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.7 (Required) マクロ パラメーターの展開結果の式は括弧で囲まれていなければならない" name="MISRAC2012-RULE_20_7" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.8 (Required) #if または #elif プリプロセッサ ディレクティブの制御式は 0 または 1 に評価されなければならない" name="MISRAC2012-RULE_20_8" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.9 (Required) #if または #elif 前処理指令の制御式で使用されるすべての識別子は評価の前に定義されていなければならない" name="MISRAC2012-RULE_20_9" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.1 (Advisory) #include 文の前には、前処理指令またはコメントだけを記述すべきである" name="MISRAC2012-RULE_20_1" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.2 (Required) 文字 '、&quot; または \ および文字シーケンス /* または // はヘッダー ファイル名で使用してはならない" name="MISRAC2012-RULE_20_2" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.3 (Required) #include 指令の後には &lt;filename> または filename が続かなければならない" name="MISRAC2012-RULE_20_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 20.4 (Required) キーワードと同じ名前を持つマクロを定義してはならない" name="MISRAC2012-RULE_20_4" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 12.2 (Required) シフト演算子の右辺のオペランドとして使用される定数はゼロから左辺の演算子の実質的な型のビット数マイナス 1 の範囲でなければならない" name="MISRAC2012-RULE_12_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 5.8 (Required) 外部リンケージを持つオブジェクトや関数はユニークでなければならない" name="MISRAC2012-RULE_5_8" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 9.4 (Required) オブジェクトの要素を複数回初期化してはならない" name="MISRAC2012-RULE_9_4" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 12.3 (Advisory) カンマ演算子は、用いてはならない" name="MISRAC2012-RULE_12_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 5.9 (Advisory) 内部リンケージを持つオブジェクトや関数識別子は、ユニークでなければならない" name="MISRAC2012-RULE_5_9" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 9.5 (Required) 指定された初期化子が配列オブジェクトの初期化に使用されている場合、配列のサイズを明示的に指定する必要がある" name="MISRAC2012-RULE_9_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 12.4 (Advisory) 定数式の評価によって符号なし整数のラップアラウンドが発生してはならない" name="MISRAC2012-RULE_12_4" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 5.6 (Required) typedef 名はユニークな識別子でなければならない" name="MISRAC2012-RULE_5_6" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 9.2 (Required) 集成体または共用体の初期化子は括弧で囲む必要がある" name="MISRAC2012-RULE_9_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 12.5 (Mandatory) sizeof 演算子のオペランドは「配列型」として宣言された関数のパラメーターであってはならない" name="MISRAC2012-RULE_12_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 16.1 (Required) すべての switch 文は整形式でなければならない" name="MISRAC2012-RULE_16_1" total="8">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 5.7 (Required) タグ名はユニークな識別子でなければならない" name="MISRAC2012-RULE_5_7" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 9.3 (Required) 配列を部分的に初期化してはならない" name="MISRAC2012-RULE_9_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 16.2 (Required) switch ラベルは、それを直接内包している複合文が switch 文の本文である場合にだけ用いなければならない" name="MISRAC2012-RULE_16_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 16.3 (Required) 空でない switch 句は、無条件 break 文で終了しなければならない" name="MISRAC2012-RULE_16_3" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 22.10 (Required) errno 設定関数の呼び出し後にだけ、errno と 0 を比較してチェックする" name="MISRAC2012-RULE_22_10" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 16.4 (Required) すべての switch 文に default ラベルがなければならない" name="MISRAC2012-RULE_16_4" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 16.5 (Required) default は最初の switch ラベルか最後の switch ラベルでなければならない" name="MISRAC2012-RULE_16_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.9 (Advisory) 代替可能な場合、関数マクロよりも関数を用いるべきである" name="MISRAC2012-DIR_4_9" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 16.6 (Required) switch 文には少なくとも 2 個の switch 句がなければならない" name="MISRAC2012-RULE_16_6" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.8 (Advisory) 構造体または共用体を指すポインターが翻訳単位内で 1 回も間接参照されない場合、オブジェクトの実装を隠すべきである" name="MISRAC2012-DIR_4_8" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 16.7 (Required) switch 文では、実質的なブール型になる値を用いてはならない" name="MISRAC2012-RULE_16_7" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.5 (Advisory) 同じ名前空間にあり可視性が重なる識別子は見た目で明確に区別できなければならない" name="MISRAC2012-DIR_4_5" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.4 (Advisory) コード セクションを コメント アウト してはならない" name="MISRAC2012-DIR_4_4" total="1">
                  <Stats authTot="12;" authUrg="0;" total="12" />
               </Category>
               <Category desc="Dir 4.7 (Required) 関数がエラー情報を返す場合、エラー情報をテストしなければならない" name="MISRAC2012-DIR_4_7" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.6 (Advisory) 基本型の代わりに、サイズおよび符号属性を指定する typedef を使用する" name="MISRAC2012-DIR_4_6" total="3">
                  <Stats authTot="29;" authUrg="0;" total="29" />
               </Category>
               <Category desc="Dir 4.1 (Required) 実行時エラーを最小限にする" name="MISRAC2012-DIR_4_1" total="10">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.12 (Required) 列挙子リスト内では、暗黙的に指定された列挙定数の値はユニークでなければならない" name="MISRAC2012-RULE_8_12" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.13 (Advisory) ポインターは可能な限り const 修飾された型を指すべきである" name="MISRAC2012-RULE_8_13" total="2">
                  <Stats authTot="1;" authUrg="0;" total="1" />
               </Category>
               <Category desc="Dir 4.3 (Required) アセンブリ言語は、カプセル化して分離しなければならない" name="MISRAC2012-DIR_4_3" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.14 (Required) restrict 型修飾子を使用してはいけない" name="MISRAC2012-RULE_8_14" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Dir 4.2 (Advisory) アセンブラの使用をすべて文書化する" name="MISRAC2012-DIR_4_2" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 1.1 (Required) プログラムに標準 C の構文および制約への違反があってはならない。また処理系の翻訳の制限を超過してはならない" name="MISRAC2012-RULE_1_1" total="4">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.10 (Required) インライン関数は static 記憶域クラスを使って宣言しなければならない" name="MISRAC2012-RULE_8_10" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 8.11 (Advisory) 外部リンケージを持つ配列を宣言する場合、そのサイズを明示的に指定する必要がある" name="MISRAC2012-RULE_8_11" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 5.1 (Required) 外部識別子は一意でなければならない" name="MISRAC2012-RULE_5_1" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 1.3 (Required) 未定義または重要な未規定の振る舞いがあってはならない" name="MISRAC2012-RULE_1_3" total="15">
                  <Stats authTot="2;" authUrg="0;" total="2" />
               </Category>
               <Category desc="Rule 5.4 (Required) マクロ識別子は一意でなければならない" name="MISRAC2012-RULE_5_4" total="4">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 5.5 (Required) 識別子はマクロ名と区別できなければならない" name="MISRAC2012-RULE_5_5" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 9.1 (Mandatory) 自動記憶域期間を持つオブジェクトの値が設定される前に読み取ってはならない" name="MISRAC2012-RULE_9_1" total="1">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 5.2 (Required) 同じスコープおよび名前空間で宣言された識別子名は一意でなければならない" name="MISRAC2012-RULE_5_2" total="4">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Category desc="Rule 12.1 (Advisory) 式内の演算子の優先順位を明示的にするべきである" name="MISRAC2012-RULE_12_1" total="3">
                  <Stats authTot="3;" authUrg="0;" total="3" />
               </Category>
               <Category desc="Rule 5.3 (Required) 内側のスコープで宣言された識別子は、外側のスコープで宣言された識別子を隠蔽してはならない" name="MISRAC2012-RULE_5_3" total="2">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Category>
         </CategoriesList>
         <SeverityList>
            <Severity id="1">
               <Stats authTot="22;" authUrg="22;" total="22" />
            </Severity>
            <Severity id="2">
               <Stats authTot="116;" authUrg="28;" total="116" />
            </Severity>
            <Severity id="4">
               <Stats authTot="87;" authUrg="0;" total="87" />
            </Severity>
         </SeverityList>
      </Rules>
      
  <StdViols>
    <StdViol msg="Section of code should not be 'commented out'" ln="14" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="1595529721" locStartln="14" locStartPos="0" locEndLn="14" locEndPos="1" locFile="/UnitTest/UnitTest.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="16" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="1595529721" locStartln="16" locStartPos="0" locEndLn="16" locEndPos="1" locFile="/UnitTest/UnitTest.c" />
    <StdViol msg="予約名 _INIT_IOLIB が使用されている" ln="26" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="26" locStartPos="5" locEndLn="26" locEndPos="6" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="予約名 _CLOSEALL が使用されている" ln="27" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="27" locStartPos="5" locEndLn="27" locEndPos="6" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="オブジェクト _nfiles は、定義されている翻訳単位でだけ参照されている" ln="50" sev="4" auth="bji" rule="MISRAC2012-RULE_8_7-a" tool="c++test" cat="MISRAC2012-RULE_8_7" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="50" locStartPos="12" locEndLn="50" locEndPos="13" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="予約名 _nfiles が使用されている" ln="50" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="50" locStartPos="12" locEndLn="50" locEndPos="13" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="オブジェクト _iob は、定義されている翻訳単位でだけ参照されている" ln="51" sev="4" auth="bji" rule="MISRAC2012-RULE_8_7-a" tool="c++test" cat="MISRAC2012-RULE_8_7" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="51" locStartPos="14" locEndLn="51" locEndPos="15" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="予約名 _iob が使用されている" ln="51" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="51" locStartPos="14" locEndLn="51" locEndPos="15" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="Declaration of object 'sml_buf' does not precede its definition" ln="52" sev="2" auth="bji" rule="MISRAC2012-RULE_8_4-a" tool="c++test" cat="MISRAC2012-RULE_8_4" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="52" locStartPos="7" locEndLn="52" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'charput' 関数のすべての引数には名前がなければならない" ln="60" sev="2" auth="bji" rule="MISRAC2012-RULE_8_2-a" tool="c++test" cat="MISRAC2012-RULE_8_2" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="60" locStartPos="12" locEndLn="60" locEndPos="13" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="charput 関数の定義がない" ln="60" sev="2" auth="bji" rule="MISRAC2012-RULE_8_6-a" tool="c++test" cat="MISRAC2012-RULE_8_6" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="60" locStartPos="12" locEndLn="60" locEndPos="13" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="charget 関数の定義がない" ln="61" sev="2" auth="bji" rule="MISRAC2012-RULE_8_6-a" tool="c++test" cat="MISRAC2012-RULE_8_6" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="61" locStartPos="14" locEndLn="61" locEndPos="15" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="Declaration of object 'flmod' does not precede its definition" ln="67" sev="2" auth="bji" rule="MISRAC2012-RULE_8_4-a" tool="c++test" cat="MISRAC2012-RULE_8_4" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="67" locStartPos="7" locEndLn="67" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="オブジェクト flmod は、定義されている翻訳単位でだけ参照されている" ln="67" sev="4" auth="bji" rule="MISRAC2012-RULE_8_7-a" tool="c++test" cat="MISRAC2012-RULE_8_7" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="67" locStartPos="7" locEndLn="67" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="パラメーター 'flg' は関数 'open' で使用されていない" ln="76" sev="4" auth="bji" rule="MISRAC2012-RULE_2_7-a" tool="c++test" cat="MISRAC2012-RULE_2_7" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="76" locStartPos="12" locEndLn="76" locEndPos="13" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="81" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="81" locStartPos="17" locEndLn="81" locEndPos="18" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の左辺のオペランドが実質的な signed 型である: signed int" ln="81" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="81" locStartPos="17" locEndLn="81" locEndPos="18" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="open 関数に return 文を 1 つだけ記述する" ln="82" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="82" locStartPos="22" locEndLn="82" locEndPos="23" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'signed int' essential type (4 byte) is assigned to an object with a narrower essential type (1 byte)" ln="84" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-a" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="84" locStartPos="13" locEndLn="84" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="open 関数に return 文を 1 つだけ記述する" ln="85" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="85" locStartPos="13" locEndLn="85" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="89" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="89" locStartPos="17" locEndLn="89" locEndPos="18" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の左辺のオペランドが実質的な signed 型である: signed int" ln="89" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="89" locStartPos="17" locEndLn="89" locEndPos="18" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="open 関数に return 文を 1 つだけ記述する" ln="90" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="90" locStartPos="22" locEndLn="90" locEndPos="23" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'signed int' essential type (4 byte) is assigned to an object with a narrower essential type (1 byte)" ln="92" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-a" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="92" locStartPos="13" locEndLn="92" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="open 関数に return 文を 1 つだけ記述する" ln="93" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="93" locStartPos="13" locEndLn="93" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="97" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="97" locStartPos="17" locEndLn="97" locEndPos="18" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の左辺のオペランドが実質的な signed 型である: signed int" ln="97" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="97" locStartPos="17" locEndLn="97" locEndPos="18" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="open 関数に return 文を 1 つだけ記述する" ln="98" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="98" locStartPos="22" locEndLn="98" locEndPos="23" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'signed int' essential type (4 byte) is assigned to an object with a narrower essential type (1 byte)" ln="100" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-a" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="100" locStartPos="13" locEndLn="100" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="open 関数に return 文を 1 つだけ記述する" ln="101" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="101" locStartPos="13" locEndLn="101" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="open 関数に return 文を 1 つだけ記述する" ln="105" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="105" locStartPos="13" locEndLn="105" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="close 関数に return 文を 1 つだけ記述する" ln="117" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="117" locStartPos="13" locEndLn="117" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="close 関数に return 文を 1 つだけ記述する" ln="120" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="120" locStartPos="7" locEndLn="120" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="136" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="136" locStartPos="11" locEndLn="136" locEndPos="12" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="136" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="136" locStartPos="37" locEndLn="136" locEndPos="38" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の左辺のオペランドが実質的な signed 型である: signed char" ln="136" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="136" locStartPos="11" locEndLn="136" locEndPos="12" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の左辺のオペランドが実質的な signed 型である: signed char" ln="136" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="136" locStartPos="37" locEndLn="136" locEndPos="38" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="論理演算子 '||' の右辺のオペランドは実質的なブール型でなければならない" ln="136" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-a" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="136" locStartPos="10" locEndLn="136" locEndPos="11" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="論理演算子 '||' の左辺のオペランドは実質的なブール型でなければならない" ln="136" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-a" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="136" locStartPos="10" locEndLn="136" locEndPos="11" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="関数 read でパラメーター buf が変更されている" ln="142" sev="4" auth="bji" rule="MISRAC2012-RULE_17_8-a" tool="c++test" cat="MISRAC2012-RULE_17_8" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="142" locStartPos="19" locEndLn="142" locEndPos="20" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'essentially unsigned' type is returned from function 'read' with the 'essentially signed' type" ln="144" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="144" locStartPos="13" locEndLn="144" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="read 関数に return 文を 1 つだけ記述する" ln="144" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="144" locStartPos="13" locEndLn="144" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="read 関数に return 文を 1 つだけ記述する" ln="147" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="147" locStartPos="13" locEndLn="147" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="パラメータ buf を const 指定付きで渡す" ln="157" sev="4" auth="bji" rule="MISRAC2012-RULE_8_13-a" tool="c++test" cat="MISRAC2012-RULE_8_13" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="157" locStartPos="13" locEndLn="157" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="165" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="165" locStartPos="11" locEndLn="165" locEndPos="12" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="165" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="165" locStartPos="37" locEndLn="165" locEndPos="38" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の左辺のオペランドが実質的な signed 型である: signed char" ln="165" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="165" locStartPos="11" locEndLn="165" locEndPos="12" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の左辺のオペランドが実質的な signed 型である: signed char" ln="165" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="165" locStartPos="37" locEndLn="165" locEndPos="38" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="論理演算子 '||' の右辺のオペランドは実質的なブール型でなければならない" ln="165" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-a" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="165" locStartPos="10" locEndLn="165" locEndPos="11" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="論理演算子 '||' の左辺のオペランドは実質的なブール型でなければならない" ln="165" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-a" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="165" locStartPos="10" locEndLn="165" locEndPos="11" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'++' 演算子は式で副作用だけを起こすべきである" ln="167" sev="4" auth="bji" rule="MISRAC2012-RULE_13_3-a" tool="c++test" cat="MISRAC2012-RULE_13_3" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="167" locStartPos="24" locEndLn="167" locEndPos="25" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="関数 write でパラメーター buf が変更されている" ln="167" sev="4" auth="bji" rule="MISRAC2012-RULE_17_8-a" tool="c++test" cat="MISRAC2012-RULE_17_8" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="167" locStartPos="24" locEndLn="167" locEndPos="25" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'essentially unsigned' type is returned from function 'write' with the 'essentially signed' type" ln="170" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="170" locStartPos="13" locEndLn="170" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="write 関数に return 文を 1 つだけ記述する" ln="170" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="170" locStartPos="13" locEndLn="170" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="write 関数に return 文を 1 つだけ記述する" ln="173" sev="4" auth="bji" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="173" locStartPos="13" locEndLn="173" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="パラメーター 'fileno' は関数 'lseek' で使用されていない" ln="183" sev="4" auth="bji" rule="MISRAC2012-RULE_2_7-a" tool="c++test" cat="MISRAC2012-RULE_2_7" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="183" locStartPos="20" locEndLn="183" locEndPos="21" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="パラメーター 'offset' は関数 'lseek' で使用されていない" ln="184" sev="4" auth="bji" rule="MISRAC2012-RULE_2_7-a" tool="c++test" cat="MISRAC2012-RULE_2_7" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="184" locStartPos="15" locEndLn="184" locEndPos="16" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="パラメーター 'base' は関数 'lseek' で使用されていない" ln="185" sev="4" auth="bji" rule="MISRAC2012-RULE_2_7-a" tool="c++test" cat="MISRAC2012-RULE_2_7" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="185" locStartPos="13" locEndLn="185" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="予約名 _INIT_IOLIB が使用されている" ln="193" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="193" locStartPos="5" locEndLn="193" locEndPos="6" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'+' 演算子の左辺のオペランドとして使用されている変数 '_iob' がポインター型である" ln="197" sev="4" auth="bji" rule="MISRAC2012-RULE_18_4-a" tool="c++test" cat="MISRAC2012-RULE_18_4" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="197" locStartPos="27" locEndLn="197" locEndPos="28" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="式に異なる種類の演算子がある場合、括弧を使用する" ln="197" sev="4" auth="bji" rule="MISRAC2012-RULE_12_1-a" tool="c++test" cat="MISRAC2012-RULE_12_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="197" locStartPos="27" locEndLn="197" locEndPos="28" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="198" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="198" locStartPos="13" locEndLn="198" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="199" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="199" locStartPos="13" locEndLn="199" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="200" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="200" locStartPos="13" locEndLn="200" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="201" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="201" locStartPos="13" locEndLn="201" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="202" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="202" locStartPos="13" locEndLn="202" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'essentially signed' type is assigned to an object with the 'essentially character' type" ln="202" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="202" locStartPos="13" locEndLn="202" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="203" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="203" locStartPos="13" locEndLn="203" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'essentially signed' type is assigned to an object with the 'essentially character' type" ln="203" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="203" locStartPos="13" locEndLn="203" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="204" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="204" locStartPos="13" locEndLn="204" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'essentially signed' type is assigned to an object with the 'essentially character' type" ln="204" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="204" locStartPos="13" locEndLn="204" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="freopen 関数を使用してはいけない" ln="207" sev="2" auth="bji" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="207" locStartPos="10" locEndLn="207" locEndPos="11" locFile="/UnitTest/lowsrc.c" />
    <FlowViol msg="ファイルがクローズされていない: freopen(...)" ln="207" ruleSAFMsg="オープンされたファイルが失われたポイント" auth="bji" sev="2" rule="MISRAC2012-RULE_22_1-a" ruleSCSCMsg="ファイルがオープンされたポイント" tool="c++test" id="2102516970" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="207" locStartPos="0" locEndLn="208" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="オープンされたファイル" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="ファイルがオープンされたポイント" kind="cause" />
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".P" desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
            <Ann msg="オープンされたファイルが失われたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="ファイルがクローズされていない: freopen(...)" ln="207" ruleSAFMsg="オープンされたファイルが失われたポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-a" ruleSCSCMsg="ファイルがオープンされたポイント" tool="c++test" id="1034971350" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="207" locStartPos="0" locEndLn="208" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="オープンされたファイル" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="ファイルがオープンされたポイント" kind="cause" />
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".P" desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
            <Ann msg="オープンされたファイルが失われたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="208" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="208" locStartPos="13" locEndLn="208" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'essentially signed' type is assigned to an object with the 'essentially character' type" ln="208" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="208" locStartPos="13" locEndLn="208" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <FlowViol msg="解放されたリソース &quot;_iob&quot; の使用" ln="208" ruleSAFMsg="使用ポイント" auth="bji" sev="1" rule="MISRAC2012-RULE_22_6-a" ruleSCSCMsg="リソースが解放されたポイント" tool="c++test" id="1137930291" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="208" locStartPos="0" locEndLn="209" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="解放されたリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが解放されたポイント" kind="cause" />
            <Ann msg="解放されたリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (true を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="208" ElType=".P" desc="stdin->_ioflag1 = 0xff;" rngLn="208">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="解放されたリソース: _iob" kind="var" />
            <Ann msg="使用ポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="解放されたリソース &quot;_iob&quot; の使用" ln="208" ruleSAFMsg="使用ポイント" auth="bji" sev="2" rule="MISRAC2012-RULE_1_3-c" ruleSCSCMsg="リソースが解放されたポイント" tool="c++test" id="-625713209" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="208" locStartPos="0" locEndLn="209" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="解放されたリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが解放されたポイント" kind="cause" />
            <Ann msg="解放されたリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (true を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="208" ElType=".P" desc="stdin->_ioflag1 = 0xff;" rngLn="208">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="解放されたリソース: _iob" kind="var" />
            <Ann msg="使用ポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="解放されたリソース &quot;_iob&quot; の使用" ln="208" ruleSAFMsg="使用ポイント" auth="bji" sev="1" rule="MISRAC2012-RULE_22_2-a" ruleSCSCMsg="リソースが解放されたポイント" tool="c++test" id="1137918775" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="208" locStartPos="0" locEndLn="209" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="解放されたリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが解放されたポイント" kind="cause" />
            <Ann msg="解放されたリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (true を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="208" ElType=".P" desc="stdin->_ioflag1 = 0xff;" rngLn="208">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="解放されたリソース: _iob" kind="var" />
            <Ann msg="使用ポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="解放されたリソース &quot;_iob&quot; の使用" ln="208" ruleSAFMsg="使用ポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-b" ruleSCSCMsg="リソースが解放されたポイント" tool="c++test" id="53672779" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="208" locStartPos="0" locEndLn="209" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="解放されたリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが解放されたポイント" kind="cause" />
            <Ann msg="解放されたリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (true を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="208" ElType=".P" desc="stdin->_ioflag1 = 0xff;" rngLn="208">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="解放されたリソース: _iob" kind="var" />
            <Ann msg="使用ポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="'|=' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="210" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="210" locStartPos="7" locEndLn="210" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'|=' 演算子の左辺のオペランドが実質的な文字型である" ln="210" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-c" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="210" locStartPos="7" locEndLn="210" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="210" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="210" locStartPos="7" locEndLn="210" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="Operands of the '|=' operator have different essential types: 'char' and 'signed char'" ln="210" sev="2" auth="bji" rule="MISRAC2012-RULE_10_4-a" tool="c++test" cat="MISRAC2012-RULE_10_4" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="210" locStartPos="7" locEndLn="210" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <FlowViol msg="解放されたリソース &quot;_iob&quot; の使用" ln="210" ruleSAFMsg="使用ポイント" auth="bji" sev="1" rule="MISRAC2012-RULE_22_6-a" ruleSCSCMsg="リソースが解放されたポイント" tool="c++test" id="1140244128" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="210" locStartPos="0" locEndLn="211" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="解放されたリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが解放されたポイント" kind="cause" />
            <Ann msg="解放されたリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType=".P" desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="解放されたリソース: _iob" kind="var" />
            <Ann msg="使用ポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="解放されたリソース &quot;_iob&quot; の使用" ln="210" ruleSAFMsg="使用ポイント" auth="bji" sev="2" rule="MISRAC2012-RULE_1_3-c" ruleSCSCMsg="リソースが解放されたポイント" tool="c++test" id="-627994284" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="210" locStartPos="0" locEndLn="211" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="解放されたリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが解放されたポイント" kind="cause" />
            <Ann msg="解放されたリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType=".P" desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="解放されたリソース: _iob" kind="var" />
            <Ann msg="使用ポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="解放されたリソース &quot;_iob&quot; の使用" ln="210" ruleSAFMsg="使用ポイント" auth="bji" sev="1" rule="MISRAC2012-RULE_22_2-a" ruleSCSCMsg="リソースが解放されたポイント" tool="c++test" id="1140231588" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="210" locStartPos="0" locEndLn="211" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="解放されたリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが解放されたポイント" kind="cause" />
            <Ann msg="解放されたリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType=".P" desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="解放されたリソース: _iob" kind="var" />
            <Ann msg="使用ポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="解放されたリソース &quot;_iob&quot; の使用" ln="210" ruleSAFMsg="使用ポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-b" ruleSCSCMsg="リソースが解放されたポイント" tool="c++test" id="51852760" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="210" locStartPos="0" locEndLn="211" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="解放されたリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="freopen(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが解放されたポイント" kind="cause" />
            <Ann msg="解放されたリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType=".P" desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="解放されたリソース: _iob" kind="var" />
            <Ann msg="使用ポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="freopen 関数を使用してはいけない" ln="212" sev="2" auth="bji" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="212" locStartPos="10" locEndLn="212" locEndPos="11" locFile="/UnitTest/lowsrc.c" />
    <FlowViol msg="ファイルがクローズされていない: freopen(...)" ln="212" ruleSAFMsg="オープンされたファイルが失われたポイント" auth="bji" sev="2" rule="MISRAC2012-RULE_22_1-a" ruleSCSCMsg="ファイルがオープンされたポイント" tool="c++test" id="1603763208" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="212" locStartPos="0" locEndLn="213" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="212" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="213" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="オープンされたファイル" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType=".C" desc="freopen(...)" rngLn="212">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="ファイルがオープンされたポイント" kind="cause" />
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType=".P" desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
            <Ann msg="オープンされたファイルが失われたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="ファイルがクローズされていない: freopen(...)" ln="212" ruleSAFMsg="オープンされたファイルが失われたポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-a" ruleSCSCMsg="ファイルがオープンされたポイント" tool="c++test" id="527878196" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="212" locStartPos="0" locEndLn="213" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="212" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="213" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="オープンされたファイル" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType=".C" desc="freopen(...)" rngLn="212">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="ファイルがオープンされたポイント" kind="cause" />
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType=".P" desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
            <Ann msg="オープンされたファイルが失われたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="無効なリソースの解放: &quot;&amp;&quot;stdout\000&quot;&quot; はメモリ中のリソースの先頭を指していない" ln="212" ruleSAFMsg="解放されたポイント" auth="bji" sev="1" rule="MISRAC2012-RULE_22_2-b" ruleSCSCMsg="リソースが定義されたポイント" tool="c++test" id="-592012624" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="212" locStartPos="0" locEndLn="213" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="197" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="198" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="無効なリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType=".C" desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが定義されたポイント" kind="cause" />
            <Ann msg="無効なリソース: _iob" kind="var" />
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType=".P" desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="無効なリソース: _iob" kind="var" />
            <Ann msg="解放されたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="無効なリソースの解放: &quot;&amp;&quot;stdout\000&quot;&quot; はメモリ中のリソースの先頭を指していない" ln="212" ruleSAFMsg="解放されたポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-c" ruleSCSCMsg="リソースが定義されたポイント" tool="c++test" id="-1672011060" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="212" locStartPos="0" locEndLn="213" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="197" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="198" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="無効なリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType=".C" desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが定義されたポイント" kind="cause" />
            <Ann msg="無効なリソース: _iob" kind="var" />
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType=".P" desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="無効なリソース: _iob" kind="var" />
            <Ann msg="解放されたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="213" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="213" locStartPos="13" locEndLn="213" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'essentially signed' type is assigned to an object with the 'essentially character' type" ln="213" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="213" locStartPos="13" locEndLn="213" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'|=' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="215" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="215" locStartPos="7" locEndLn="215" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'|=' 演算子の左辺のオペランドが実質的な文字型である" ln="215" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-c" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="215" locStartPos="7" locEndLn="215" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="215" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="215" locStartPos="7" locEndLn="215" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="Operands of the '|=' operator have different essential types: 'char' and 'signed char'" ln="215" sev="2" auth="bji" rule="MISRAC2012-RULE_10_4-a" tool="c++test" cat="MISRAC2012-RULE_10_4" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="215" locStartPos="7" locEndLn="215" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="freopen 関数を使用してはいけない" ln="217" sev="2" auth="bji" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="217" locStartPos="10" locEndLn="217" locEndPos="11" locFile="/UnitTest/lowsrc.c" />
    <FlowViol msg="ファイルがクローズされていない: freopen(...)" ln="217" ruleSAFMsg="オープンされたファイルが失われたポイント" auth="bji" sev="2" rule="MISRAC2012-RULE_22_1-a" ruleSCSCMsg="ファイルがオープンされたポイント" tool="c++test" id="1650455392" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="217" locStartPos="0" locEndLn="218" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="217" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="218" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="オープンされたファイル" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType="." desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="215" ElType="." desc="stdout->_ioflag1 |= _IOUNBUF;" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType=".C" desc="freopen(...)" rngLn="217">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="ファイルがオープンされたポイント" kind="cause" />
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType=".P" desc="if(freopen(&quot;stderr&quot;, &quot;w&quot;, stderr)==NULL){" rngLn="217">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
            <Ann msg="オープンされたファイルが失われたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="ファイルがクローズされていない: freopen(...)" ln="217" ruleSAFMsg="オープンされたファイルが失われたポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-a" ruleSCSCMsg="ファイルがオープンされたポイント" tool="c++test" id="582895452" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="217" locStartPos="0" locEndLn="218" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="217" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="218" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="オープンされたファイル" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType="." desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="215" ElType="." desc="stdout->_ioflag1 |= _IOUNBUF;" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType=".C" desc="freopen(...)" rngLn="217">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="ファイルがオープンされたポイント" kind="cause" />
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType=".P" desc="if(freopen(&quot;stderr&quot;, &quot;w&quot;, stderr)==NULL){" rngLn="217">
          <Props>
            <Prop key="Tracked variables" val="freopen(...)" />
          </Props>
          <Anns>
            <Ann msg="オープンされたファイル: freopen(...)" kind="var" />
            <Ann msg="オープンされたファイルが失われたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="無効なリソースの解放: &quot;&amp;&quot;stderr\000&quot;&quot; はメモリ中のリソースの先頭を指していない" ln="217" ruleSAFMsg="解放されたポイント" auth="bji" sev="1" rule="MISRAC2012-RULE_22_2-b" ruleSCSCMsg="リソースが定義されたポイント" tool="c++test" id="-646980927" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="217" locStartPos="0" locEndLn="218" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="197" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="198" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="無効なリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType=".C" desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが定義されたポイント" kind="cause" />
            <Ann msg="無効なリソース: _iob" kind="var" />
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType="." desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="215" ElType="." desc="stdout->_ioflag1 |= _IOUNBUF;" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType=".P" desc="if(freopen(&quot;stderr&quot;, &quot;w&quot;, stderr)==NULL){" rngLn="217">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="無効なリソース: _iob" kind="var" />
            <Ann msg="解放されたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="無効なリソースの解放: &quot;&amp;&quot;stderr\000&quot;&quot; はメモリ中のリソースの先頭を指していない" ln="217" ruleSAFMsg="解放されたポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-c" ruleSCSCMsg="リソースが定義されたポイント" tool="c++test" id="-1718721859" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="217" locStartPos="0" locEndLn="218" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="197" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="198" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="無効なリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType=".C" desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="リソースが定義されたポイント" kind="cause" />
            <Ann msg="無効なリソース: _iob" kind="var" />
            <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
            <Ann msg="ループに入る" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
            <Ann msg="ループに入っていない" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType="." desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
          <Props />
          <Anns>
            <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="215" ElType="." desc="stdout->_ioflag1 |= _IOUNBUF;" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType=".P" desc="if(freopen(&quot;stderr&quot;, &quot;w&quot;, stderr)==NULL){" rngLn="217">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="無効なリソース: _iob" kind="var" />
            <Ann msg="解放されたポイント" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="218" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="218" locStartPos="13" locEndLn="218" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="The expression of the 'essentially signed' type is assigned to an object with the 'essentially character' type" ln="218" sev="2" auth="bji" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="218" locStartPos="13" locEndLn="218" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'|=' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="220" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="220" locStartPos="7" locEndLn="220" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'|=' 演算子の左辺のオペランドが実質的な文字型である" ln="220" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-c" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="220" locStartPos="7" locEndLn="220" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="FILE オブジェクトへのポインターを間接参照している" ln="220" sev="1" auth="bji" rule="MISRAC2012-RULE_22_5-a" tool="c++test" cat="MISRAC2012-RULE_22_5" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="220" locStartPos="7" locEndLn="220" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="Operands of the '|=' operator have different essential types: 'char' and 'signed char'" ln="220" sev="2" auth="bji" rule="MISRAC2012-RULE_10_4-a" tool="c++test" cat="MISRAC2012-RULE_10_4" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="220" locStartPos="7" locEndLn="220" locEndPos="8" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="予約名 _CLOSEALL が使用されている" ln="226" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="226" locStartPos="5" locEndLn="226" locEndPos="6" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="231" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="231" locStartPos="16" locEndLn="231" locEndPos="17" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'&amp;' 演算子の左辺のオペランドが実質的な文字型である" ln="231" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-c" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="231" locStartPos="16" locEndLn="231" locEndPos="17" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'|' 演算子の右辺のオペランドが実質的な signed 型である: signed char" ln="231" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="231" locStartPos="36" locEndLn="231" locEndPos="37" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="'|' 演算子の左辺のオペランドが実質的な signed 型である: signed char" ln="231" sev="2" auth="bji" rule="MISRAC2012-RULE_10_1-e" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="231" locStartPos="36" locEndLn="231" locEndPos="37" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="0 との比較テストは明示的に行うべきである" ln="231" sev="2" auth="bji" rule="MISRAC2012-RULE_14_4-a" tool="c++test" cat="MISRAC2012-RULE_14_4" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="231" locStartPos="13" locEndLn="231" locEndPos="14" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="Operands of the '&amp;' operator have different essential types: 'char' and 'signed char'" ln="231" sev="2" auth="bji" rule="MISRAC2012-RULE_10_4-a" tool="c++test" cat="MISRAC2012-RULE_10_4" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="231" locStartPos="16" locEndLn="231" locEndPos="17" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="fclose 関数を使用してはいけない" ln="232" sev="2" auth="bji" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="232" locStartPos="19" locEndLn="232" locEndPos="20" locFile="/UnitTest/lowsrc.c" />
    <StdViol msg="未使用関数の &quot;fclose&quot; 戻り値" ln="232" sev="2" auth="bji" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="232" locStartPos="19" locEndLn="232" locEndPos="20" locFile="/UnitTest/lowsrc.c" />
    <FlowViol msg="無効なリソースの解放: &quot;_iob + i&quot; はメモリ中のリソースの先頭を指していない" ln="232" ruleSAFMsg="解放されたポイント" auth="bji" sev="1" rule="MISRAC2012-RULE_22_2-b" ruleSCSCMsg="リソースが定義されたポイント" tool="c++test" id="382947536" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="232" locStartPos="0" locEndLn="233" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="無効なリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="103" ElType="." desc="volatile _UDWORD* ramcr_address;" rngLn="103">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="105" ElType="." desc="set_vbr((void *)((_UINT)INTHandlerPRG - INT_OFFSET));" rngLn="105">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="107" ElType="." desc="set_fpscr(FPSCR_Init &amp; FPSCR_RM &amp; FPSCR_DN);" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="111" ElType="." desc="_INITSCT();" rngLn="111">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="115" ElType="!" desc="_INIT_IOLIB(); // Enable I/O in the application(both SIM I/O and hardware I/O)" rngLn="115">
          <ElDescList>
            <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
                <Ann msg="ループに入っていない" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="リソースが定義されたポイント" kind="cause" />
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType="." desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="215" ElType="." desc="stdout->_ioflag1 |= _IOUNBUF;" rngLn="215">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType="." desc="if(freopen(&quot;stderr&quot;, &quot;w&quot;, stderr)==NULL){" rngLn="217">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="220" ElType="." desc="stderr->_ioflag1 |= _IOUNBUF;" rngLn="220">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="121" ElType="." desc="ramcr_address = (_UDWORD*)RAMCR_ADDRESS;" rngLn="121">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="無効なリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="122" ElType="." desc="*ramcr_address = RAMCR_INIT_VALUE;" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="123" ElType="." desc="set_cr(SR_Init);" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="125" ElType="." desc="main();" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="127" ElType="!" desc="_CLOSEALL(); // Close I/O in the application(both SIM I/O and hardware I/O)" rngLn="127">
          <ElDescList>
            <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="228" ElType="." desc="_SINT i;" rngLn="228">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="230" ElType="!" desc="for(i = 0; i &lt; _nfiles; i++){" rngLn="230">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価:(i &lt; 20) (true)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="231" ElType="." desc="if(_iob[i]._ioflag1 &amp; (_IOREAD | _IOWRITE | _IORW )){" rngLn="231">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
                <Prop key="Important values" val="i" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="条件評価: ((int)_iob[i]._ioflag1 &amp; 7 != 0) (true を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="232" ElType="!" desc="fclose(&amp;_iob[i]);" rngLn="232">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="230" ElType="." desc="for(i = 0; i &lt; _nfiles; i++){" rngLn="230">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="ループ条件評価: (i &lt; 20) (true を仮定)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="231" ElType="." desc="if(_iob[i]._ioflag1 &amp; (_IOREAD | _IOWRITE | _IORW )){" rngLn="231">
              <Props />
              <Anns>
                <Ann msg="条件評価: ((int)_iob[i]._ioflag1 &amp; 7 != 0) (true を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="232" ElType=".P" desc="fclose(&amp;_iob[i]);" rngLn="232">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="解放されたポイント" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="無効なリソースの解放: &quot;_iob + i&quot; はメモリ中のリソースの先頭を指していない" ln="232" ruleSAFMsg="解放されたポイント" auth="bji" sev="1" rule="MISRAC2012-RULE_22_2-b" ruleSCSCMsg="リソースが定義されたポイント" tool="c++test" id="775862942" lang="cpp" locType="sr" urgent="true" config="1" hash="1950404136" locStartln="232" locStartPos="0" locEndLn="233" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="197" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="198" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="無効なリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="103" ElType="." desc="volatile _UDWORD* ramcr_address;" rngLn="103">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="105" ElType="." desc="set_vbr((void *)((_UINT)INTHandlerPRG - INT_OFFSET));" rngLn="105">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="107" ElType="." desc="set_fpscr(FPSCR_Init &amp; FPSCR_RM &amp; FPSCR_DN);" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="111" ElType="." desc="_INITSCT();" rngLn="111">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="115" ElType="!" desc="_INIT_IOLIB(); // Enable I/O in the application(both SIM I/O and hardware I/O)" rngLn="115">
          <ElDescList>
            <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType=".C" desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="リソースが定義されたポイント" kind="cause" />
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
                <Ann msg="ループに入っていない" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType="." desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="215" ElType="." desc="stdout->_ioflag1 |= _IOUNBUF;" rngLn="215">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType="." desc="if(freopen(&quot;stderr&quot;, &quot;w&quot;, stderr)==NULL){" rngLn="217">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="220" ElType="." desc="stderr->_ioflag1 |= _IOUNBUF;" rngLn="220">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="121" ElType="." desc="ramcr_address = (_UDWORD*)RAMCR_ADDRESS;" rngLn="121">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="無効なリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="122" ElType="." desc="*ramcr_address = RAMCR_INIT_VALUE;" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="123" ElType="." desc="set_cr(SR_Init);" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="125" ElType="." desc="main();" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="127" ElType="!" desc="_CLOSEALL(); // Close I/O in the application(both SIM I/O and hardware I/O)" rngLn="127">
          <ElDescList>
            <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="228" ElType="." desc="_SINT i;" rngLn="228">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="230" ElType="." desc="for(i = 0; i &lt; _nfiles; i++){" rngLn="230">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価:(i &lt; 20) (true)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="231" ElType="." desc="if(_iob[i]._ioflag1 &amp; (_IOREAD | _IOWRITE | _IORW )){" rngLn="231">
              <Props />
              <Anns>
                <Ann msg="条件評価: ((int)_iob[i]._ioflag1 &amp; 7 != 0) (true を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="232" ElType=".P" desc="fclose(&amp;_iob[i]);" rngLn="232">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="解放されたポイント" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="無効なリソースの解放: &quot;_iob + i&quot; はメモリ中のリソースの先頭を指していない" ln="232" ruleSAFMsg="解放されたポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-c" ruleSCSCMsg="リソースが定義されたポイント" tool="c++test" id="1446176940" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="232" locStartPos="0" locEndLn="233" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="無効なリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="103" ElType="." desc="volatile _UDWORD* ramcr_address;" rngLn="103">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="105" ElType="." desc="set_vbr((void *)((_UINT)INTHandlerPRG - INT_OFFSET));" rngLn="105">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="107" ElType="." desc="set_fpscr(FPSCR_Init &amp; FPSCR_RM &amp; FPSCR_DN);" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="111" ElType="." desc="_INITSCT();" rngLn="111">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="115" ElType="!" desc="_INIT_IOLIB(); // Enable I/O in the application(both SIM I/O and hardware I/O)" rngLn="115">
          <ElDescList>
            <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
                <Ann msg="ループに入っていない" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType=".C" desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="リソースが定義されたポイント" kind="cause" />
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType="." desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="215" ElType="." desc="stdout->_ioflag1 |= _IOUNBUF;" rngLn="215">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType="." desc="if(freopen(&quot;stderr&quot;, &quot;w&quot;, stderr)==NULL){" rngLn="217">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="220" ElType="." desc="stderr->_ioflag1 |= _IOUNBUF;" rngLn="220">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="121" ElType="." desc="ramcr_address = (_UDWORD*)RAMCR_ADDRESS;" rngLn="121">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="無効なリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="122" ElType="." desc="*ramcr_address = RAMCR_INIT_VALUE;" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="123" ElType="." desc="set_cr(SR_Init);" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="125" ElType="." desc="main();" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="127" ElType="!" desc="_CLOSEALL(); // Close I/O in the application(both SIM I/O and hardware I/O)" rngLn="127">
          <ElDescList>
            <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="228" ElType="." desc="_SINT i;" rngLn="228">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="230" ElType="!" desc="for(i = 0; i &lt; _nfiles; i++){" rngLn="230">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価:(i &lt; 20) (true)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="231" ElType="." desc="if(_iob[i]._ioflag1 &amp; (_IOREAD | _IOWRITE | _IORW )){" rngLn="231">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
                <Prop key="Important values" val="i" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="条件評価: ((int)_iob[i]._ioflag1 &amp; 7 != 0) (true を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="232" ElType="!" desc="fclose(&amp;_iob[i]);" rngLn="232">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="230" ElType="." desc="for(i = 0; i &lt; _nfiles; i++){" rngLn="230">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="ループ条件評価: (i &lt; 20) (true を仮定)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="231" ElType="." desc="if(_iob[i]._ioflag1 &amp; (_IOREAD | _IOWRITE | _IORW )){" rngLn="231">
              <Props />
              <Anns>
                <Ann msg="条件評価: ((int)_iob[i]._ioflag1 &amp; 7 != 0) (true を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="232" ElType=".P" desc="fclose(&amp;_iob[i]);" rngLn="232">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="解放されたポイント" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="無効なリソースの解放: &quot;_iob + i&quot; はメモリ中のリソースの先頭を指していない" ln="232" ruleSAFMsg="解放されたポイント" auth="bji" sev="4" rule="MISRAC2012-DIR_4_13-c" ruleSCSCMsg="リソースが定義されたポイント" tool="c++test" id="1860109026" lang="cpp" locType="sr" config="1" hash="1950404136" locStartln="232" locStartPos="0" locEndLn="233" locEndPos="0" locFile="/UnitTest/lowsrc.c" FirstElSrcRngStartln="197" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="198" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/UnitTest/lowsrc.c">
      <Props>
        <Prop key="Tracked variables" val="無効なリソース" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="103" ElType="." desc="volatile _UDWORD* ramcr_address;" rngLn="103">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="105" ElType="." desc="set_vbr((void *)((_UINT)INTHandlerPRG - INT_OFFSET));" rngLn="105">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="107" ElType="." desc="set_fpscr(FPSCR_Init &amp; FPSCR_RM &amp; FPSCR_DN);" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="111" ElType="." desc="_INITSCT();" rngLn="111">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="115" ElType="!" desc="_INIT_IOLIB(); // Enable I/O in the application(both SIM I/O and hardware I/O)" rngLn="115">
          <ElDescList>
            <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="195" ElType="." desc="FILE *fp;" rngLn="195">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType=".C" desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="リソースが定義されたポイント" kind="cause" />
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="ループ条件評価:(fp &lt; _iob + 20) (true)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="198" ElType="." desc="fp->_bufptr = NULL;" rngLn="198">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="199" ElType="." desc="fp->_bufcnt = 0L;" rngLn="199">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="200" ElType="." desc="fp->_buflen = 0L;" rngLn="200">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="201" ElType="." desc="fp->_bufbase = NULL;" rngLn="201">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="202" ElType="." desc="fp->_ioflag1 = 0;" rngLn="202">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="203" ElType="." desc="fp->_ioflag2 = 0;" rngLn="203">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="204" ElType="." desc="fp->_iofd = 0;" rngLn="204">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="197" ElType="." desc="for(fp = _iob; fp &lt; _iob+_nfiles; fp++){" rngLn="197">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価: (fp &lt; _iob + 20) (false を仮定)" kind="condEval" />
                <Ann msg="ループに入っていない" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="207" ElType="." desc="if(freopen(&quot;stdin&quot;, &quot;r&quot;, stdin)==NULL){" rngLn="207">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="210" ElType="." desc="stdin->_ioflag1 |= _IOUNBUF;" rngLn="210">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="212" ElType="." desc="if(freopen(&quot;stdout&quot;, &quot;w&quot;, stdout)==NULL){" rngLn="212">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="215" ElType="." desc="stdout->_ioflag1 |= _IOUNBUF;" rngLn="215">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="217" ElType="." desc="if(freopen(&quot;stderr&quot;, &quot;w&quot;, stderr)==NULL){" rngLn="217">
              <Props />
              <Anns>
                <Ann msg="条件評価: (freopen(...) == 0) (false を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="220" ElType="." desc="stderr->_ioflag1 |= _IOUNBUF;" rngLn="220">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="121" ElType="." desc="ramcr_address = (_UDWORD*)RAMCR_ADDRESS;" rngLn="121">
          <Props>
            <Prop key="Tracked variables" val="_iob" />
          </Props>
          <Anns>
            <Ann msg="無効なリソース: _iob" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="122" ElType="." desc="*ramcr_address = RAMCR_INIT_VALUE;" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="123" ElType="." desc="set_cr(SR_Init);" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="125" ElType="." desc="main();" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/UnitTest/resetprg.c" srcRnghash="-1075093856" ln="127" ElType="!" desc="_CLOSEALL(); // Close I/O in the application(both SIM I/O and hardware I/O)" rngLn="127">
          <ElDescList>
            <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="228" ElType="." desc="_SINT i;" rngLn="228">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="230" ElType="." desc="for(i = 0; i &lt; _nfiles; i++){" rngLn="230">
              <Props />
              <Anns>
                <Ann msg="ループ条件評価:(i &lt; 20) (true)" kind="condEval" />
                <Ann msg="ループに入る" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="231" ElType="." desc="if(_iob[i]._ioflag1 &amp; (_IOREAD | _IOWRITE | _IORW )){" rngLn="231">
              <Props />
              <Anns>
                <Ann msg="条件評価: ((int)_iob[i]._ioflag1 &amp; 7 != 0) (true を仮定)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/UnitTest/lowsrc.c" srcRnghash="1950404136" ln="232" ElType=".P" desc="fclose(&amp;_iob[i]);" rngLn="232">
              <Props>
                <Prop key="Tracked variables" val="_iob" />
              </Props>
              <Anns>
                <Ann msg="無効なリソース: _iob" kind="var" />
                <Ann msg="解放されたポイント" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="多重インクルードは最初の #ifndef または #if プリプロセッサ命令でなければならない" ln="1" sev="2" auth="bji" rule="MISRAC2012-DIR_4_10-a" tool="c++test" cat="MISRAC2012-DIR_4_10" lang="cpp" locType="sr" config="1" hash="-1546982530" locStartln="1" locStartPos="0" locEndLn="1" locEndPos="1" locFile="/UnitTest/lowsrc.h" />
    <StdViol msg="Section of code should not be 'commented out'" ln="31" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="31" locStartPos="0" locEndLn="31" locEndPos="1" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="INTHandlerPRG 関数の定義がない" ln="60" sev="2" auth="bji" rule="MISRAC2012-RULE_8_6-a" tool="c++test" cat="MISRAC2012-RULE_8_6" lang="cpp" locType="sr" urgent="true" config="1" hash="-1075093856" locStartln="60" locStartPos="12" locEndLn="60" locEndPos="13" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="予約名 _INIT_IOLIB が使用されている" ln="71" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="71" locStartPos="12" locEndLn="71" locEndPos="13" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="予約名 _CLOSEALL が使用されている" ln="72" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="72" locStartPos="12" locEndLn="72" locEndPos="13" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="77" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="77" locStartPos="0" locEndLn="77" locEndPos="1" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="80" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="80" locStartPos="0" locEndLn="80" locEndPos="1" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="88" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="88" locStartPos="0" locEndLn="88" locEndPos="1" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="109" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="109" locStartPos="0" locEndLn="109" locEndPos="1" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="113" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="113" locStartPos="0" locEndLn="113" locEndPos="1" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="117" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="117" locStartPos="0" locEndLn="117" locEndPos="1" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="汎整数型 unsigned int をオブジェクト型 _UDWORD * へのポインターに変換してはならない" ln="121" sev="4" auth="bji" rule="MISRAC2012-RULE_11_4-a" tool="c++test" cat="MISRAC2012-RULE_11_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="121" locStartPos="20" locEndLn="121" locEndPos="21" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="符号なし型の整数定数 0xff000074 に接尾辞 U を付けなければならない" ln="121" sev="2" auth="bji" rule="MISRAC2012-RULE_7_2-a" tool="c++test" cat="MISRAC2012-RULE_7_2" lang="cpp" locType="sr" urgent="true" config="1" hash="-1075093856" locStartln="121" locStartPos="30" locEndLn="121" locEndPos="31" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="129" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="-1075093856" locStartln="129" locStartPos="0" locEndLn="129" locEndPos="1" locFile="/UnitTest/resetprg.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="1" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="1" locStartPos="0" locEndLn="1" locEndPos="1" locFile="/UnitTest/sample.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="1" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="1" locStartPos="15" locEndLn="1" locEndPos="16" locFile="/UnitTest/sample.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="2" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="2" locStartPos="4" locEndLn="2" locEndPos="5" locFile="/UnitTest/sample.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="2" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="2" locStartPos="23" locEndLn="2" locEndPos="24" locFile="/UnitTest/sample.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="4" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="4" locStartPos="4" locEndLn="4" locEndPos="5" locFile="/UnitTest/sample.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="4" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="4" locStartPos="19" locEndLn="4" locEndPos="20" locFile="/UnitTest/sample.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="5" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="5" locStartPos="8" locEndLn="5" locEndPos="9" locFile="/UnitTest/sample.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="10" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="10" locStartPos="4" locEndLn="10" locEndPos="5" locFile="/UnitTest/sample.c" />
    <StdViol msg="基本数値型 int を使用するべきではない" ln="10" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="10" locStartPos="23" locEndLn="10" locEndPos="24" locFile="/UnitTest/sample.c" />
    <StdViol msg="関数 sub_sampleTest は、定義されている翻訳単位でだけ参照されている" ln="10" sev="4" auth="bji" rule="MISRAC2012-RULE_8_7-a" tool="c++test" cat="MISRAC2012-RULE_8_7" lang="cpp" locType="sr" config="1" hash="-746276324" locStartln="10" locStartPos="8" locEndLn="10" locEndPos="9" locFile="/UnitTest/sample.c" />
    <StdViol msg="Prototype of function 'func' does not precede function call" ln="11" sev="1" auth="bji" rule="MISRAC2012-RULE_17_3-a" tool="c++test" cat="MISRAC2012-RULE_17_3" lang="cpp" locType="sr" urgent="true" config="1" hash="-746276324" locStartln="11" locStartPos="6" locEndLn="11" locEndPos="7" locFile="/UnitTest/sample.c" />
    <StdViol msg="未使用関数の &quot;func&quot; 戻り値" ln="11" sev="2" auth="bji" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" urgent="true" config="1" hash="-746276324" locStartln="11" locStartPos="6" locEndLn="11" locEndPos="7" locFile="/UnitTest/sample.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //const size_t _sbrk_size=&#x9;&#x9;/* Specifies the minimum unit of&#x9;*/" ln="21" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="21" locStartPos="0" locEndLn="21" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="_s1ptr オブジェクトの定義がない" ln="24" sev="2" auth="bji" rule="MISRAC2012-RULE_8_6-a" tool="c++test" cat="MISRAC2012-RULE_8_6" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="24" locStartPos="15" locEndLn="24" locEndPos="16" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="予約名 _s1ptr が使用されている" ln="24" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="24" locStartPos="15" locEndLn="24" locEndPos="16" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="union キーワードを使用してはいけない" ln="27" sev="4" auth="bji" rule="MISRAC2012-RULE_19_2-a" tool="c++test" cat="MISRAC2012-RULE_19_2" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="27" locStartPos="0" locEndLn="27" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="union キーワードを使用してはいけない" ln="32" sev="4" auth="bji" rule="MISRAC2012-RULE_19_2-a" tool="c++test" cat="MISRAC2012-RULE_19_2" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="32" locStartPos="7" locEndLn="32" locEndPos="8" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //static __X union HEAP_TYPE heap_area__X;              /* for DSP-C */" ln="33" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="33" locStartPos="0" locEndLn="33" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //static __Y union HEAP_TYPE heap_area__Y;              /* for DSP-C */" ln="34" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="34" locStartPos="0" locEndLn="34" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="Global variable 'brk' is being used only in a single function 'sbrk'" ln="38" sev="4" auth="bji" rule="MISRAC2012-RULE_8_9-a" tool="c++test" cat="MISRAC2012-RULE_8_9" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="38" locStartPos="15" locEndLn="38" locEndPos="16" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //static __X _SBYTE *brk__X=(_SBYTE __X *)&amp;heap_area__X;    /* for DSP-C */" ln="39" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="39" locStartPos="0" locEndLn="39" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //static __Y _SBYTE *brk__Y=(_SBYTE __Y *)&amp;heap_area__Y;    /* for DSP-C */" ln="40" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="40" locStartPos="0" locEndLn="40" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="'+' 演算子の左辺のオペランドがポインター型である" ln="51" sev="4" auth="bji" rule="MISRAC2012-RULE_18_4-a" tool="c++test" cat="MISRAC2012-RULE_18_4" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="51" locStartPos="18" locEndLn="51" locEndPos="19" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="'+' 演算子の左辺のオペランドとして使用されている変数 'brk' がポインター型である" ln="51" sev="4" auth="bji" rule="MISRAC2012-RULE_18_4-a" tool="c++test" cat="MISRAC2012-RULE_18_4" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="51" locStartPos="7" locEndLn="51" locEndPos="8" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="式に異なる種類の演算子がある場合、括弧を使用する" ln="51" sev="4" auth="bji" rule="MISRAC2012-RULE_12_1-a" tool="c++test" cat="MISRAC2012-RULE_12_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="51" locStartPos="7" locEndLn="51" locEndPos="8" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="式に異なる種類の演算子がある場合、括弧を使用する" ln="51" sev="4" auth="bji" rule="MISRAC2012-RULE_12_1-a" tool="c++test" cat="MISRAC2012-RULE_12_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="51" locStartPos="18" locEndLn="51" locEndPos="19" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="汎整数型 int をオブジェクト型 _SBYTE * へのポインターに変換してはならない" ln="52" sev="4" auth="bji" rule="MISRAC2012-RULE_11_4-a" tool="c++test" cat="MISRAC2012-RULE_11_4" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="52" locStartPos="12" locEndLn="52" locEndPos="13" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="'+=' 演算子の左辺のオペランドとして使用されている変数 'brk' がポインター型である" ln="56" sev="4" auth="bji" rule="MISRAC2012-RULE_18_4-a" tool="c++test" cat="MISRAC2012-RULE_18_4" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="56" locStartPos="8" locEndLn="56" locEndPos="9" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="61" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="61" locStartPos="0" locEndLn="61" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //*      the head of the line which has /* for DSP-C */ and add start     */" ln="66" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="66" locStartPos="0" locEndLn="66" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //_SBYTE __X *sbrk__X(size_t size)        /* Assigned area size */      /* for DSP-C */" ln="69" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="69" locStartPos="0" locEndLn="69" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //{                                                                     /* for DSP-C */" ln="70" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="70" locStartPos="0" locEndLn="70" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    __X _SBYTE *p;                                                    /* for DSP-C */" ln="71" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="71" locStartPos="0" locEndLn="71" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //                                                                      /* for DSP-C */" ln="72" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="72" locStartPos="0" locEndLn="72" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    if (brk__X+size > heap_area__X.heap+HEAPSIZE) { /* Empty area size */ /* for DSP-C */" ln="73" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="73" locStartPos="0" locEndLn="73" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //        return (_SBYTE __X *)-1;                                      /* for DSP-C */" ln="74" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="74" locStartPos="0" locEndLn="74" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    }                                                                 /* for DSP-C */" ln="75" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="75" locStartPos="0" locEndLn="75" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //                                                                      /* for DSP-C */" ln="76" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="76" locStartPos="0" locEndLn="76" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    p = brk__X;                 /* Area assignment */                 /* for DSP-C */" ln="77" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="77" locStartPos="0" locEndLn="77" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    brk__X += size;             /* End address update */              /* for DSP-C */" ln="78" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="78" locStartPos="0" locEndLn="78" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    return p;                                                         /* for DSP-C */" ln="79" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="79" locStartPos="0" locEndLn="79" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //}                                                                     /* for DSP-C */" ln="80" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="80" locStartPos="0" locEndLn="80" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="Section of code should not be 'commented out'" ln="82" sev="4" auth="bji" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="82" locStartPos="0" locEndLn="82" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //*      the head of the line which has /* for DSP-C */ and add start     */" ln="87" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="87" locStartPos="0" locEndLn="87" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //_SBYTE __Y *sbrk__Y(size_t size)         /* Assigned area size */     /* for DSP-C */" ln="90" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="90" locStartPos="0" locEndLn="90" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //{                                                                     /* for DSP-C */" ln="91" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="91" locStartPos="0" locEndLn="91" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    __Y _SBYTE *p;                                                    /* for DSP-C */" ln="92" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="92" locStartPos="0" locEndLn="92" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //                                                                      /* for DSP-C */" ln="93" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="93" locStartPos="0" locEndLn="93" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    if (brk__Y+size > heap_area__Y.heap+HEAPSIZE) { /* Empty area size */ /* for DSP-C */" ln="94" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="94" locStartPos="0" locEndLn="94" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //        return (_SBYTE __Y *)-1;                                      /* for DSP-C */" ln="95" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="95" locStartPos="0" locEndLn="95" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    }                                                                 /* for DSP-C */" ln="96" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="96" locStartPos="0" locEndLn="96" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    p = brk__Y;                  /* Area assignment */                /* for DSP-C */" ln="97" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="97" locStartPos="0" locEndLn="97" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    brk__Y += size;              /* End address update */             /* for DSP-C */" ln="98" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" urgent="true" config="1" hash="1226004552" locStartln="98" locStartPos="0" locEndLn="98" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //    return p;                                                         /* for DSP-C */" ln="99" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="99" locStartPos="0" locEndLn="99" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="C スタイル コメントの中に &quot;//&quot; コメント マーカーを埋め込んではいけない: //}                                                                     /* for DSP-C */" ln="100" sev="2" auth="bji" rule="MISRAC2012-RULE_3_1-c" tool="c++test" cat="MISRAC2012-RULE_3_1" lang="cpp" locType="sr" config="1" hash="1226004552" locStartln="100" locStartPos="0" locEndLn="100" locEndPos="1" locFile="/UnitTest/sbrk.c" />
    <StdViol msg="多重インクルードは最初の #ifndef または #if プリプロセッサ命令でなければならない" ln="1" sev="2" auth="bji" rule="MISRAC2012-DIR_4_10-a" tool="c++test" cat="MISRAC2012-DIR_4_10" lang="cpp" locType="sr" config="1" hash="-268181581" locStartln="1" locStartPos="0" locEndLn="1" locEndPos="1" locFile="/UnitTest/sbrk.h" />
    <StdViol msg="多重インクルードは最初の #ifndef または #if プリプロセッサ命令でなければならない" ln="1" sev="2" auth="bji" rule="MISRAC2012-DIR_4_10-a" tool="c++test" cat="MISRAC2012-DIR_4_10" lang="cpp" locType="sr" urgent="true" config="1" hash="1065508020" locStartln="1" locStartPos="0" locEndLn="1" locEndPos="1" locFile="/UnitTest/stacksct.h" />
    <StdViol msg="多重インクルードは最初の #ifndef または #if プリプロセッサ命令でなければならない" ln="1" sev="2" auth="bji" rule="MISRAC2012-DIR_4_10-a" tool="c++test" cat="MISRAC2012-DIR_4_10" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="1" locStartPos="0" locEndLn="1" locEndPos="1" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _SBYTE にサイズを表す数字が含まれていない" ln="14" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="14" locStartPos="20" locEndLn="14" locEndPos="21" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _SBYTE が使用されている" ln="14" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="14" locStartPos="20" locEndLn="14" locEndPos="21" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _SBYTE を宣言する代わりに stdint.h の型を使用する" ln="14" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="14" locStartPos="20" locEndLn="14" locEndPos="21" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _UBYTE にサイズを表す数字が含まれていない" ln="15" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="15" locStartPos="22" locEndLn="15" locEndPos="23" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _UBYTE が使用されている" ln="15" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" urgent="true" config="1" hash="1314440717" locStartln="15" locStartPos="22" locEndLn="15" locEndPos="23" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _UBYTE を宣言する代わりに stdint.h の型を使用する" ln="15" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="15" locStartPos="22" locEndLn="15" locEndPos="23" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _SWORD にサイズを表す数字が含まれていない" ln="16" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="16" locStartPos="21" locEndLn="16" locEndPos="22" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _SWORD が使用されている" ln="16" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="16" locStartPos="21" locEndLn="16" locEndPos="22" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _SWORD を宣言する代わりに stdint.h の型を使用する" ln="16" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="16" locStartPos="21" locEndLn="16" locEndPos="22" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _UWORD にサイズを表す数字が含まれていない" ln="17" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="17" locStartPos="23" locEndLn="17" locEndPos="24" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _UWORD が使用されている" ln="17" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="17" locStartPos="23" locEndLn="17" locEndPos="24" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _UWORD を宣言する代わりに stdint.h の型を使用する" ln="17" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="17" locStartPos="23" locEndLn="17" locEndPos="24" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _SINT にサイズを表す数字が含まれていない" ln="18" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="18" locStartPos="19" locEndLn="18" locEndPos="20" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _SINT が使用されている" ln="18" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="18" locStartPos="19" locEndLn="18" locEndPos="20" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _SINT を宣言する代わりに stdint.h の型を使用する" ln="18" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="18" locStartPos="19" locEndLn="18" locEndPos="20" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _UINT にサイズを表す数字が含まれていない" ln="19" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="19" locStartPos="21" locEndLn="19" locEndPos="22" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _UINT が使用されている" ln="19" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" urgent="true" config="1" hash="1314440717" locStartln="19" locStartPos="21" locEndLn="19" locEndPos="22" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _UINT を宣言する代わりに stdint.h の型を使用する" ln="19" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="19" locStartPos="21" locEndLn="19" locEndPos="22" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _SDWORD にサイズを表す数字が含まれていない" ln="20" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="20" locStartPos="20" locEndLn="20" locEndPos="21" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _SDWORD が使用されている" ln="20" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="20" locStartPos="20" locEndLn="20" locEndPos="21" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _SDWORD を宣言する代わりに stdint.h の型を使用する" ln="20" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="20" locStartPos="20" locEndLn="20" locEndPos="21" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _UDWORD にサイズを表す数字が含まれていない" ln="21" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="21" locStartPos="22" locEndLn="21" locEndPos="23" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _UDWORD が使用されている" ln="21" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="21" locStartPos="22" locEndLn="21" locEndPos="23" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _UDWORD を宣言する代わりに stdint.h の型を使用する" ln="21" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="21" locStartPos="22" locEndLn="21" locEndPos="23" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _SQWORD にサイズを表す数字が含まれていない" ln="22" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="22" locStartPos="25" locEndLn="22" locEndPos="26" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _SQWORD が使用されている" ln="22" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="22" locStartPos="25" locEndLn="22" locEndPos="26" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _SQWORD を宣言する代わりに stdint.h の型を使用する" ln="22" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="22" locStartPos="25" locEndLn="22" locEndPos="26" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="Typedef 名 _UQWORD にサイズを表す数字が含まれていない" ln="23" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-a" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="23" locStartPos="27" locEndLn="23" locEndPos="28" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="予約名 _UQWORD が使用されている" ln="23" sev="2" auth="bji" rule="MISRAC2012-RULE_21_2-a" tool="c++test" cat="MISRAC2012-RULE_21_2" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="23" locStartPos="27" locEndLn="23" locEndPos="28" locFile="/UnitTest/typedefine.h" />
    <StdViol msg="独自の型 _UQWORD を宣言する代わりに stdint.h の型を使用する" ln="23" sev="4" auth="bji" rule="MISRAC2012-DIR_4_6-c" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1314440717" locStartln="23" locStartPos="27" locEndLn="23" locEndPos="28" locFile="/UnitTest/typedefine.h" />
  </StdViols>

      <Supps />
      
      
   </CodingStandards>
   <Metrics ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:34">
      
   </Metrics>
   <AssocUrls />
</ResultsSession>